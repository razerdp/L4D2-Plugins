/************************************************************************
*	道具系统
************************************************************************/
#define SOUND_GOTITEM	"doors/door_metal_thin_close2.wav"
#define SOUND_USEITEM	"doors/doormove2.wav"

/* 消耗类道具 */
#define ITXH_QTCZL		0	//指挥官
#define ITXH_QTKBJ		1	//疾风步卷轴
#define ITXH_QTSXJ		2	//速射卷轴
#define ITXH_QTHDJ		3	//快速装填卷轴
#define ITXH_SMHFJ		4	//生命恢复卷轴
#define ITXH_MLHFJ		5	//魔力恢复卷轴
#define ITXH_WXZDJ		6	//无限子弹卷轴

/* 装备类道具 */
#define ITZB_VP2Z			0	//黄金勋章
#define ITZB_VP3Z			1	//白银勋章
#define ITZB_MMMM1		2	//低级治愈戒指	治愈+3
#define ITZB_MMMM2		3	//中级治愈戒指	治愈+5
#define ITZB_MMMM3		4	//高级治愈戒指	治愈+8
#define ITZB_MMMM4		5	//极品治愈戒指	治愈+10
#define ITZB_TTT1		6	//低级鬼步靴子	移动速度+1%
#define ITZB_TTT2		7	//中级鬼步靴子	移动速度+3%
#define ITZB_TTT3		8	//高级鬼步靴子	移动速度+5%
#define ITZB_TTT4		9	//极品鬼步靴子	移动速度+8%
#define ITZB_YXZY			10	//羽翔之翼	跳跃+5%
#define ITZB_GZY			11	//光之翼		跳跃+10%
#define ITZB_DJSMZD		12	//低级生命之盾	血量+20
#define ITZB_ZJSMZD		13	//中级生命之盾	血量+50
#define ITZB_GJSMZD		14	//高级生命之盾	血量+70
#define ITZB_JPSMZD		15	//极品生命之盾	血量+400
#define ITZB_SY			16	//圣翼		跳跃+20%
#define ITZB_SQ_GTZQ		17	//神器★钢铁之躯	治疗+6 防御+10%  血量+300
#define ITZB_QQQ0		18	//低级火焰风衣	减少火焰伤害5%
#define ITZB_QQQ1		19	//中极火焰风衣	减少火焰伤害10%
#define ITZB_QQQ2		20	//高级火焰风衣	减少火焰伤害15%
#define ITZB_QQQ3		21	//极品火焰风衣	减少火焰伤害20%
#define ITZB_5555	    22	//低级改良弹药	枪械攻击力+1%
#define ITZB_6666		23	//中级改良弹药	枪械攻击力+2%
#define ITZB_7777		24	//高级改良弹药	枪械攻击力+3%
#define ITZB_8888		25	//极品改良弹药	枪械攻击力+40%
#define ITZB_HHH1		26	//低级魔力颈链	MP+5000
#define ITZB_HHH2		27	//中级魔力颈链	MP+10000
#define ITZB_HHH3		28	//高级魔力颈链	MP+15000
#define ITZB_HHH4		29	//极品魔力颈链	MP+40000
#define ITZB_LLL1		30	//低级改造枪膛	射速+1%
#define ITZB_LLL2		31	//中级改造枪膛	射速+2%
#define ITZB_LLL3		32	//高级改造枪膛	射速+3%
#define ITZB_LLL4		33	//极品改造枪膛	射速+25%
#define ITZB_SQ_QYZQ		34	//神器★轻盈之躯	移动速度+2.5% 跳跃高度+25%
#define ITZB_SQ_KBZQ		35	//神器★狂暴之躯	攻击+5.0% 射速+25%
#define ITZB_VP1Z			36	//水晶勋章
#define ITZB_QQQ4	37	//神器★火凤凰之羽	减少火焰伤害50%
#define ITZB_WWW4		38	//低级金刚护甲	防御+5%
#define ITZB_WWW3		39	//中级金刚护甲	防御+10%
#define ITZB_WWW2		40	//高级金刚护甲	防御+15%
#define ITZB_WWW1		41	//极品金刚护甲	防御+40%
#define ITZB_AWCS		42	//[神器]暗黑(新手)		速度+2.0% 重力+10% 攻击+2.0% 射速+20% 治疗+30 防御+20% 生命+200 MP+8w 火焰伤害-10%
#define ITZB_ZSTK		43	//传说★头盔 	MP + 10w
#define ITZB_ZSKJ		44	//传说★铠甲 	火焰伤害减少 + 60%
#define ITZB_ZSKZ		45	//传说★裤子	跳跃高度+26%
#define ITZB_ASDF		46	//传说★鞋子	移动速度+8.0%
#define ITZB_ZSXL		47	//传说★项链	治愈生命+40
#define ITZB_ZSWQ		48	//传说★武器	 攻击速度+80%
#define ITZB_ZSMD		49	//传说★生命盾 	生命+500
#define ITZB_TYLMB		50	//紫炎套装	//移动速度+5.0% 重力+20% 攻击力+2.8% 射速+25% 治疗+20 防御+40% 生命+200 MP+5w 减少火焰伤害+20%
#define ITZB_TYDAG		51	//恶魔套装 		//移动速度+5.5% 重力+20% 攻击力+3.0% 射速+30% 生命恢复+30 防御加成+50% 生命+200 MP+100000 减少火焰伤害+25%
#define ITZB_TYQWA		52	//死亡练狱套装 //移动速度+6.0% 重力+25% 攻击力+3.2% 射速+40% 生命恢复+35 防御加成+50% 生命+800 MP+100000 减少火焰伤害+50%
#define ITZB_TYDS	    53	//噩梦套装	//移动速度+7.0% 重力+30% 攻击力+5.0% 射速+50% 生命恢复+50 防御加成+70% 生命+800 MP+120000 减少火焰伤害+30%
#define ITZB_LKJA	    	54	//亡灵手杖【武器】	//射速 50%
#define ITZB_HKLA	    	55	//龙王头盔【头盔】	//Mp+200000
#define ITZB_AZSXD	    	56	//死神舞步【鞋子】	//速度+4.0%
#define ITZB_YDSB	    	57	//亡灵护甲【护甲】	//生命+600
#define ITZB_WAXZ	    	58	//死亡勋章【勋章】	//移动速度+3.0% 重力+20% 攻击力+3.0% 射速+20% 生命恢复+30 防御加成+40%  生命+300 MP+10w 减少火焰伤害+30%
#define ITZB_JKAS	    	59	//龙王套装【创世神★遗物】		//移动速度+10.0% 重力+35% 攻击力+5.0% 射速+50% 生命恢复+40 防御加成+50%  生命+500 MP+15w 减少火焰伤害+35%
#define ITZB_XSZB			60	//新手装备低于30级,未转职的玩家可以使用
#define ITZB_DMXYZL		61	//工程师职业套装
#define ITZB_AYLS			62	//士兵职业套装
#define ITZB_WLYS			63	//生物专家职业套装
#define ITZB_ZXZZ			64		//心灵医生职业套装
#define ITZB_YGOK			65		//魔法师职业套装
#define ITZB_SSNM			66		//死神套装【地狱神器】 //移动速度+8.0% 重力+40% 攻击力+5.0% 射速+50% 生命恢复+60 防御加成+60%  生命+800 MP+15w 减少火焰伤害+30%
#define ITZB_SWEP			67		//死亡圣器【地狱神器】 //移动速度+8.0% 重力+40% 攻击力+5.5% 射速+60% 生命恢复+70 防御加成+55%  生命+800 MP+15w 减少火焰伤害+40%
#define ITZB_SLJK			68		//圣灵之光【天堂神器】 //移动速度+15.0% 重力+40% 攻击力+13.0% 射速+60% 生命恢复+50 防御加成+70%  生命+2000 MP+15w 减少火焰伤害+100%
#define ITZB_SLOP		    69		//圣灵魔光【天堂神器】 //生命恢复+50 生命+1200 减少火焰伤害+60%
#define ITZB_FKEQ		70		//【天堂神器】冰封 防御加成+100%
#define ITZB_SLYY		71		//【天堂神器】神灵光翼 移动速度+13.0% 重力+70%
#define ITZB_SQWE		72		//【天堂神器】神灵之剑 攻击力12.0% MP+30W
#define ITZB_VP4Z		73		//至尊勋章 //火伤-40%
#define ITZB_YHCX		74		//樱花枪膛 //攻击+80%
#define ITZB_YHWE		75		//樱花项链 //MP+35W
#define ITZB_TTAS		76		//[天堂神器] 圣灵勋章//移动速度+6.0% 重力+50% 攻击力+7.0% 射速+70% 生命恢复+30 防御加成+40%  生命+1000 MP+10w 减少火焰伤害+30%
#define ITZB_HAFE		77		//黑暗之泣// 速度+3.0% 攻击+5.0%
#define ITZB_HADF		78		//黑暗骑士// 移动速度+2.5% 重力+30% 攻击力+2.0% 射速+40% 生命恢复+20 防御加成+20%  生命+400 MP+10w 减少火焰伤害+20%
#define ITZB_HAJ		79		//黑暗加农//  攻击力+3.0% 射速+40%
#define ITZB_LSZ		80		//雷神//  攻击力+10.0% 射速+100%
#define ITZB_POI		81		//无限之光//  攻击力+3.0% 射速+20%  速度+3.0%
#define ITZB_DRE		82		//炎神枪膛//  攻击力+3.0%
#define ITZB_CCNM		83		//炎神之靴//  移动速度+3.0%  射速+40%
#define ITZB_LOI		84		//炎神之盾//  生命+500
#define ITZB_DCW		85		//炎神护甲//  防御加成+30%
#define ITZB_LAS		86		//炎神羽翼//  重力+40%
#define ITZB_AAX		87		//炎神魔戒//  治愈生命+30
#define ITZB_FDS		88		//炎神套装//攻击力+3.0% 移动速度+4.0%  射速+40% 生命+500  重力+20% 治愈生命+40 MP+ 120000
#define ITZB_DRXN		89		//龙王之怒//攻击力+6.0% 重力+10% 治愈生命+20
#define ITZB_NMFP		90		//亡者之力// 重力+20% 治愈生命+60
#define ITZB_DYSTZ		91		//弹药师职业套装
#define ITZB_DYSZTZ		92		//地狱使者职业套装
#define ITZB_SSZTZ		93		//死神职业套装
#define ITZB_HAXZTZ		94		//黑暗行者职业套装
#define ITZB_SWJSTZ		95		//死亡祭师职业套装
#define ITZB_LDSZTZ		96		//雷电使者职业套装
#define ITZB_YWZTZ		97		//影武者职业套装
#define ITZB_NMBA		98		//审判者职业套装
#define ITZB_SOS		99		//末世之力[神] // 移动速度+300% 攻击力+300% 射速+300%  HP恢复30%  生命+50000%  火焰+800%  MP+ 1000000 
#define ITZB_ASN1		100		//末世之盾[神]//末世之盾[神] //防御+800% 治愈生命+100%  生命值50000%  火焰抗性800%  跳跃200% 
#define ITZB_WQB2		101		//末世之矛[神]//末世之矛[神] //伤害400% 抢戒200% 
#define ITZB_WES3		102		//末世之炎[神]//末世之炎[神] //防御+800% 火焰抗性800% 
#define ITZB_JIO4		103		//末世之翼[神]//末世之翼[神] //速度+300% 跳越+300% 
#define ITZB_LKJ5		104		//末世之手[神]//末世之手[神] //伤害+300% 速度+300%
#define ITZB_AZS1		105		//小野的护甲//小野的护甲 //HP+20000
#define ITZB_BABA2		106		//小野的护肩//小野的护肩 //mp+300000
#define ITZB_JOKA3		107		//小野的头盔//小野的头盔 //防御+80%
#define ITZB_ASD4		108		//小野的腰带//小野的腰带 //火炕+80%
#define ITZB_AA5		109		//小野的鞋子//小野的鞋子 //速度+70%
#define ITZB_AAC6		110		//小野的武器//小野的武器 //伤害+4000%
#define ITZB_ZZ111      111     //10月1纪念套装 //10月1套装 //攻击+3000%防御+60%火炕+60%蓝+10万血+1万速度+100%跳跃+50
#define ITZB_YJZB1		112		//狂战之魂套//狂战之魂套 //劈砍+15000 伤害+3000 法伤+5万 生命+20000 防御+30 蓝+50000 回血3000 
#define ITZB_YJZB2		113		//万圣节套装//万圣节套装 //劈砍+30000 伤害+4000 法伤+5万 速度+50 蓝+50000 回血3000 

/* 消耗类道具 */
static String:ItemName_XH[ITEM_XH_MAX][888] = { "指挥官", "疾风步卷轴", "速射卷轴", "快速装填卷轴", "生命恢复卷轴", "魔力恢复卷轴", "单体无敌卷轴", "全体无敌卷轴", "无限子弹卷轴" };

/* 消耗类道具说明 */
static String:ItemMSG_XH[ITEM_XH_MAX][999] =
{
"═══════ 玩家通用 ═══════ \n \n是上古流传下来用于在战场上快速救援队友的魔法卷轴. \n使用后可以快速召唤全体队友到自己身边 \n \n═══════════════════",
"═══════ 玩家通用 ═══════ \n \n是神话中恶魔常常使用的力量,后来被魔法师制成了卷轴. \n使用后全体队友移动速度提高100％持续80秒 \n \n═══════════════════",
"═══════ 玩家通用 ═══════ \n \n是神话中恶魔常常使用的力量,后来被魔法师制成了卷轴. \n使用后全体队友攻击速度提高100％持续80秒 \n \n═══════════════════" ,
"═══════ 玩家通用 ═══════ \n \n是神话中恶魔常常使用的力量,后来被魔法师制成了卷轴. \n使用后全体队友换弹速度提高100％持续80秒 \n \n═══════════════════" ,
"═══════ 玩家通用 ═══════ \n \n是远古巫师所创造的能够让将祝福的圣光给予已经逝去的生命. \n使用后生命值瞬间恢复至满 \n \n═══════════════════" ,
"═══════ 玩家通用 ═══════ \n \n是魔法时代各大魔导师经过数百年的尝试,终于炼制而成魔力卷. \n使用后魔法值瞬间恢复至满 \n \n═══════════════════" ,
"═══════ 玩家通用 ═══════ \n \n上帝依旧眷恋着我们...... \n使用后无敌持续80秒. \n \n═══════════════════" ,
"═══════ 玩家通用 ═══════ \n \n天堂的圣光,地狱的魔光,混沌的力量.... \n使用后全体幸存者无敌持续80秒. \n \n═══════════════════" ,
"═══════ 玩家通用 ═══════ \n \n炼金时代的炼金术士利用各种炼金科技打造的迷之卷轴. \n使用后全体幸存者无限子弹持续80秒. \n \n═══════════════════"
};

/* 消耗类掉落几率 */
static Float:Item_XH_Radio[ITEM_XH_MAX] = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };


/* 属性类装备 */
static String:ItemName_ZB[ITEM_ZB_MAX][256] = { "黄金勋章", "白银勋章", "低级治愈戒指", "中级治愈戒指", "高级治愈戒指" , "极品治愈戒指", "低级鬼步靴子",
 "中级鬼步靴子", "高级鬼步靴子", "极品鬼步靴子", "羽翔之翼", "光之翼", "低级生命之盾", "中级生命之盾", "高级生命之盾", "极品生命之盾", "圣翼",
 "神器★钢铁之躯", "低级火焰风衣", "中极火焰风衣", "高级火焰风衣", "极品火焰风衣", "低级改良弹药", "中级改良弹药", "高级改良弹药", "极品改良弹药",
 "低级魔力颈链", "中级魔力颈链", "高级魔力颈链", "极品魔力颈链", "低级改造枪膛", "中级改造枪膛", "高级改造枪膛", "极品改造枪膛", "神器★轻盈之躯",
 "神器★狂暴之躯", "水晶勋章", "神器★火凤凰之羽", "低级金刚护甲", "中级金刚护甲", "高级金刚护甲", "极品金刚护甲", "暗黑", "传说★头盔", "传说★铠甲",
 "传说★裤子", "传说★鞋子", "传说★项链", "传说★武器", "传说★生命盾", "紫炎套装", "恶魔套装", "死亡练狱套装", "噩梦套装", "亡者手杖【武器】",
 "龙王头盔【头盔】", "死神舞步【鞋子】", "亡灵护甲【护甲】", "维爱勋章【勋章】", "龙王套装", "新手套装", "工程师职业套装", "士兵职业套装", "生物专家职业套装",
 "心灵医师职业套装", "魔法师职业套装", "死神套装【地狱神器】", "死亡圣器【地狱神器】", "圣灵之光【天堂神器】", "圣灵魔光【天堂神器】", "【天堂神器】冰封", "【天堂神器】神灵光翼"
 , "【天堂神器】神灵之剑", "至尊勋章", "樱花枪膛", "樱花项链", "圣灵勋章【天堂神器】", "黑暗之泣", "黑暗骑士", "黑暗加农", "雷神", "无限之光", "炎神枪膛"
 , "炎神之靴", "炎神之盾", "炎神护甲", "炎神羽翼", "炎神魔戒", "炎神套装", "龙王之怒", "亡者之力", "弹药师职业套装", "地狱使者职业套装", "死神职业套装"
 , "黑暗行者职业套装", "死亡祭师职业套装", "雷电使者职业套装", "影武者职业套装", "审判者职业套装", "末世之力", "末世之盾", "末世之矛", "末世之炎", "末世之翼", "末世之手", 
 "小野护甲", "小野护肩", "小野头盔", "小野腰带", "小野鞋子", "小野武器", "10月1纪念套装", "狂战之魂套", "万圣节套装"};

/* 属性类装备说明 */
static String:ItemMSG_ZB[ITEM_ZB_MAX][256] =
{
"═══════ 黄金勋章 ═══════ \n \n黄金会员期间所拥有的勋章(移动速度+10％) \n \n═══════════════════",
"═══════ 白银勋章 ═══════ \n \n白银会员期间所拥有的勋章(移动速度+5％) \n \n═══════════════════",
"═══════ 低级治愈戒指 ═══════ \n \n提高治愈术效果的戒指(治愈术每秒恢复HP+1) \n \n═══════════════════",
"═══════ 中级治愈戒指 ═══════ \n \n提高治愈术效果的戒指(治愈术每秒恢复HP+2) \n \n═══════════════════",
"═══════ 高级治愈戒指 ═══════ \n \n提高治愈术效果的戒指(治愈术每秒恢复HP+3) \n \n═══════════════════",
"═══════ 极品治愈戒指 ═══════ \n \n提高治愈术效果的戒指(治愈术每秒恢复HP+4) \n \n═══════════════════",
"═══════ 低级鬼步靴子 ═══════ \n \n提高移动速度的特殊靴子(移动速度+3％) \n \n═══════════════════",
"═══════ 中级鬼步靴子 ═══════ \n \n提高移动速度的特殊靴子(移动速度+8％) \n \n═══════════════════",
"═══════ 高级鬼步靴子 ═══════ \n \n提高移动速度的特殊靴子(移动速度+12％) \n \n═══════════════════",
"═══════ 极品鬼步靴子 ═══════ \n \n提高移动速度的特殊靴子(移动速度+16％) \n \n═══════════════════",
"═══════ 羽翔之翼 ═══════ \n \n提高跳跃的高度的翅膀(跳跃高度+5％) \n \n═══════════════════",
"═══════ 光之翼 ═══════ \n \n提高跳跃的高度的翅膀(跳跃高度+10％) \n \n═══════════════════",
"═══════ 低级生命之盾 ═══════ \n \n提生命值的强力盾牌(HP+20) \n \n═══════════════════",
"═══════ 中级生命之盾 ═══════ \n \n提生命值的强力盾牌(HP+50) \n \n═══════════════════",
"═══════ 高级生命之盾 ═══════ \n \n提生命值的强力盾牌(HP+70) \n \n═══════════════════",
"═══════ 极品生命之盾 ═══════ \n \n劈砍+2000 回血+2000 血+1500 \n \n═══════════════════",
"═══════ 圣翼 ═══════ \n \n提高跳跃的高度的翅膀(跳跃高度+20％) \n \n═══════════════════",
"═══════神器★钢铁之躯 ═══════ \n \n提高治愈术效果(治愈术每秒恢复HP+5) \n提高生命值上限(HP+200) \n提高防御力(防御+10％) \n \n═══════════════════",
"═══════ 低级火焰风衣 ═══════ \n \n减少所有火焰伤害(伤害-5％) \n \n═══════════════════",
"═══════ 中级火焰风衣 ═══════ \n \n减少所有火焰伤害(伤害-10％) \n \n═══════════════════",
"═══════ 高级火焰风衣 ═══════ \n \n减少所有火焰伤害(伤害-15％) \n \n═══════════════════",
"═══════ 极品火焰风衣 ═══════ \n \n减少所有火焰伤害(伤害-20％) \n \n═══════════════════",
"═══════ 低级改良弹药 ═══════ \n \n提高枪械武器的攻击力(攻击力+400％) \n \n═══════════════════",
"═══════ 中级改良弹药 ═══════ \n \n提高枪械武器的攻击力(攻击力+500％) \n \n═══════════════════",
"═══════ 高级改良弹药 ═══════ \n \n提高枪械武器的攻击力(攻击力+600％) \n \n═══════════════════",
"═══════ 极品改良弹药 ═══════ \n \n提高枪械武器的攻击力(攻击力+700％) \n \n═══════════════════",
"═══════ 低级魔力颈链 ═══════ \n \n提高魔法值的上限值(MP上限+5000) \n \n═══════════════════",
"═══════ 中级魔力颈链 ═══════ \n \n提高魔法值的上限值(MP上限+10000) \n \n═══════════════════",
"═══════ 高级魔力颈链 ═══════ \n \n提高魔法值的上限值(MP上限+15000) \n \n═══════════════════",
"═══════ 极品魔力颈链 ═══════ \n \n提高魔法值的上限值(MP上限+20000) \n \n═══════════════════",
"═══════ 低级改造枪膛 ═══════ \n \n提高枪械武器的攻击速度(攻速+1％) \n \n═══════════════════",
"═══════ 中级改造枪膛 ═══════ \n \n提高枪械武器的攻击速度(攻速+2％) \n \n═══════════════════",
"═══════ 高级改造枪膛 ═══════ \n \n提高枪械武器的攻击速度(攻速+3％) \n \n═══════════════════",
"═══════ 极品改造枪膛 ═══════ \n \n提高枪械武器的攻击速度(攻速+4％) \n \n═══════════════════",
"═══════ 神器★轻盈之躯 ═══════ \n \n提高移动速度(移动速度+15％) \n提高跳跃高度(跳跃高度+15％) \n \n═══════════════════",
"═══════ 神器★狂暴之躯 ═══════ \n \n提高枪械武器的攻击力(攻击力+5％) \n提高枪械武器的攻击速度(攻速+5％) \n \n═══════════════════",
"═══════ 水晶勋章 ═══════ \n \n水晶会员期间所拥有的勋章(移动速度+20％) \n减少所有火焰伤害(伤害-10％) \n \n═══════════════════",
"═══════ 神器★火凤凰之羽 ═══════ \n \n减少所有火焰伤害(伤害-50％) \n \n═══════════════════",
"═══════ 低级金刚护甲 ═══════ \n \n提高自身的防御力(防御力+5％) \n \n═══════════════════",
"═══════ 中级金刚护甲 ═══════ \n \n提高自身的防御力(防御力+10％) \n \n═══════════════════",
"═══════ 高级金刚护甲 ═══════ \n \n提高自身的防御力(防御力+15％) \n \n═══════════════════",
"═══════ 极品金刚护甲 ═══════ \n \n劈砍+2000 回血+2000 防御+20% \n \n═══════════════════",
"═══════ [神器]暗黑(新手) ═══════ \n \n速度+20% 重力+10% 攻击+700% 射速+20% \n治疗+30 防御+20% 生命+200 MP+8w 火焰伤害-10% \n \n═══════════════════",
"═══════ 传说★头盔 ═══════ \n \n法伤+1万 蓝1W \n \n═══════════════════",
"═══════ 传说★铠甲 ═══════ \n \n提高火焰抵抗增加60% \n \n═══════════════════",
"═══════ 传说★裤子 ═══════ \n \n提高跳跃高度增加50% \n \n═══════════════════",
"═══════ 传说★鞋子 ═══════ \n \n提高移动速度增加80% \n \n═══════════════════",
"═══════ 传说★项链 ═══════ \n \n使用治疗术时加大回血量 \n \n═══════════════════",
"═══════ 传说★武器 ═══════ \n \n提高枪械射击速度增加80% \n \n═══════════════════",
"═══════ 传说★生命盾 ═══════ \n \n提高自身血量上限500 \n \n═══════════════════",
"═══════ 紫炎套装 ═══════ \n \n法伤+2万 移动+50 重力+10 攻击力+1000 射速+25 治疗+20 防御+40 生命+200 火抗+20 蓝+2万 \n \n═══════════════════",
"═══════ 恶魔套装 ═══════ \n \n法伤+2万 移动+55 重力+20 攻击+100 射速+30 回血+30 防御+50 生命+200 蓝+2万 火+25  \n \n═══════════════════",
"═══════ 死亡练狱套装 ═══════ \n \n移动速度+60% 重力+25 攻击力+32 射速+40 \n生命恢复+35 防御加成+50 生命+800 减少火焰伤害+50  \n \n═══════════════════",
"═══════ 噩梦套装 ═══════ \n \n法伤+3万 移动+90 重力+30 攻击+500 射速+50 回血+50 防御+70 生命+800 蓝+3万 火+30\n \n═══════════════════",
"═══════ 亡灵手杖【武器】 ═══════ \n \n射速 50% \n \n═══════════════════",
"═══════ 龙王头盔【头盔】 ═══════ \n \n法伤+2万 蓝+20000\n \n═══════════════════",
"═══════ 死神舞步【鞋子】 ═══════ \n \n速度+40% \n \n═══════════════════",
"═══════ 亡灵护甲【护甲】 ═══════ \n \n生命+600 \n \n═══════════════════",
"═══════ 【神器】 ═══════ \n \n移动速度+30% 重力+20% 攻击力+1700% 射速+20% \n生命恢复+30 防御加成+40%  生命+300  减少火焰伤害+30% \n \n═══════════════════",
"═══════ 龙王套装【创世神★遗物】 ═══════ \n \n 移动+100 重力+35 攻击+1500 射速+50 回血+40 防御+50 生命+800 火+35 \n \n═══════════════════",
"══════ 【新手套装】 ══════ \n \n 等级低于30级未转职玩家可以佩戴! \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 工程师职业可以佩戴! \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 士兵职业可以佩戴! \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 生物专家职业可以佩戴! \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 心灵医师职业可以佩戴! \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 魔法师职业可以佩戴! \n \n═══════════════════",
"══════ 死神套装【地狱神器】 ══════ \n \n 死神套装 法伤+2万 速度+25 治疗+6 防御+20 生命+100 MP+2w 火焰伤害-50 \n \n═══════════════════",
"══════ 死亡圣器【地狱神器】 ══════ \n \n 劈砍+3000 移动+80 重力+10 攻击+1500 射速+50 回血+3000 防御+60 生命+800 火+40\n \n═══════════════════",
"══════ 圣灵之光【天堂神器】 ══════ \n \n 移动+100 重力+10 攻击+1000 射速+60 回血+50 防御+70 生命+2000 火+100\n \n═══════════════════",
"══════ 圣灵魔光【天堂神器】 ══════ \n \n 回血+50 生命+10000 火+60 \n \n═══════════════════",
"══════ 【天堂神器】冰封 ══════ \n \n 防御+100 \n \n═══════════════════",
"══════ 【天堂神器】神灵光翼 ══════ \n \n 移动+100 重力+70 \n \n═══════════════════",
"══════ 【天堂神器】神灵之剑 ══════ \n \n 攻击1500 法伤+3万 蓝加3万 \n \n═══════════════════",
"══════ 至尊勋章 ══════ \n \n (-火伤40%)至尊勋章! \n \n═══════════════════",
"══════ 樱花枪膛 ══════ \n \n 劈砍+3000 回血+3000 攻击力1500 \n \n═══════════════════",
"══════ 樱花项链 ══════ \n \n 法伤+3万 蓝+30000\n \n═══════════════════",
"══════ [天堂神器] 圣灵勋章 ══════ \n \n 移动速度+60% 重力+30% 攻击力+1700% 射速+70% \n生命恢复+30 防御加成+40%  生命+1000 减少火焰伤害+30%\n \n═══════════════════",
"══════ 黑暗之泣 ══════ \n \n 移动速度+50 攻击+1500\n \n═══════════════════",
"══════ 黑暗骑士 ══════ \n \n 移动+50 重力+10 攻击+1500 射速+40 回血+20 防御+20 生命+400 火+20 \n \n═══════════════════",
"══════ 黑暗加农 ══════ \n \n 攻击+1500 射速+40 \n \n═══════════════════",
"══════ 雷神 ══════ \n \n 攻击+2000 射速+100 \n \n═══════════════════",
"══════ 无限之光 ══════ \n \n 攻击+1000 射速+20  速度+30\n \n═══════════════════",
"══════【炼化装备】 ══════ \n \n 攻击力+1000% \n \n═══════════════════",
"══════【炼化装备】 ══════ \n \n 移动速度+30%  射速+40%  \n \n═══════════════════",
"══════【炼化装备】 ══════ \n \n 生命+500   \n \n═══════════════════",
"══════【炼化装备】 ══════ \n \n 防御加成+30% \n \n═══════════════════",
"══════【炼化装备】 ══════ \n \n 重力加成+40% \n \n═══════════════════",
"══════【炼化装备】 ══════ \n \n 治愈血量+30 \n \n═══════════════════",
"══════【炼化套装】 ══════ \n \n 攻击力+1000% 移动速度+40%  射速+40% \n生命+500  重力+20% 治愈生命+40 \n \n═══════════════════",
"══════ 龙王之怒 ══════ \n \n 攻击+1500 重力+10 回血+20  \n \n═══════════════════",
"══════ 亡者之力 ══════ \n \n  重力+10 回血+60 \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 弹药师职业可以佩戴! \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 地狱使者职业可以佩戴! \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 死神职业可以佩戴! \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 黑暗行者职业可以佩戴! \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 死亡祭师职业可以佩戴! \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 雷电使者职业可以佩戴! \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 影武者职业可以佩戴! \n \n═══════════════════",
"══════ 【职业套装】 ══════ \n \n 审判者职业可以佩戴! \n \n═══════════════════",
"═══════ 末世之力[神] ═══════ \n \n(劈砍+6000 移动+50 攻击+3000 射速+300 H回血3000 生命+20000 火焰+80 ) \n \n═══════════════════",
"═══════ 末世之盾[神] ═══════ \n \n(劈砍+6000 防御+800 回血+3000 生命10000 火80  ) \n \n═══════════════════",
"═══════ 末世之矛[神] ═══════ \n \n(伤害3000 射速200 ) \n \n═══════════════════",
"═══════ 末世之炎[神] ═══════ \n \n(防御+70 火80  ) \n \n═══════════════════",
"═══════ 末世之翼[神] ═══════ \n \n(速度+300 跳跃+300 ) \n \n═══════════════════",
"═══════ 末世之手[神] ═══════ \n \n(伤害+3000 速度+300) \n \n═══════════════════",
"═══════ 【小野的护甲】 ═══════ \n \n(劈砍+15000 回血+5000 血+20000) \n \n═══════════════════",
"═══════ 【小野的护肩】 ═══════ \n \n(法伤+5万 ) \n \n═══════════════════",
"═══════ 【小野的头盔】 ═══════ \n \n(劈砍+15000 回血+2000 防御+80 ) \n \n═══════════════════",
"═══════ 【小野的腰带】 ═══════ \n \n(劈砍+15000 火炕+80 回血+6000) \n \n═══════════════════",
"═══════ 【小野的鞋子】 ═══════ \n \n(速度+70 跳跃+60) \n \n═══════════════════",
"═══════ 【小野的武器】 ═══════ \n \n(伤害+4000 法伤+5万) \n \n═══════════════════",
"═══════ 【10月1永久套装】 ═══════ \n \n(攻击+3000 法伤+5万 防御+60 火炕+60 蓝+5万 血+1万 速度+100 跳跃+50) \n \n═══════════════════",
"═══════ 【狂战之魂套】 ═══════ \n \n(劈砍+15000 伤害+3000 法伤+5万 生命+20000 防御+30 蓝+50000 回血3000 ) \n \n═══════════════════",
"═══════ 【万圣节套装】 ═══════ \n \n(劈砍+30000 伤害+4000 法伤+5万 速度+50 蓝+50000 回血3000 ) \n \n═══════════════════"
};

/* 装备类掉落几率 */
static Float:Item_ZB_Radio[ITEM_ZB_MAX] =
{
3.0,
5.0,
70.0,
35.0,
10.0,
2.5,
75.0,
40.0,
15.0,
5.0,
25.0, //10
2.5,
85.0,
50.0,
25.0,
2.5,
3.0,
10.0,
65.0,
35.0,
10.0, //20
1.5,
75.0,
50.0,
20.0,
1.0,
80.0,
60.0,
30.0,
5.0,
30.0, //30
20.0,
5.0,
3.0,
5.0,
6.0,
5.0,
4.0,
40.0,
20.0,
10.0 //40
};


new XH_itemcost = 10000;
new ZB_itemcost = 10000;

#define XH_COSTEFFECT[%1]	PlayerXHItemSize[%1] * 10000 + XH_itemcost - 10000
#define ZB_COSTEFFECT[%1]	PlayerZBItemSize[%1] * 25000 + ZB_itemcost - 25000

/* 使用道具临时变量 */
new UseXHItem[MAXPLAYERS+1];
/* 装备物品临时变量 */
new UseZBItem[MAXPLAYERS+1];

/* 全体嗜血卷变量 */
new bool:IsActionQTSXJ = false;

/* 全体换弹卷变量 */
new bool:IsActionQTHDJ = false;

/* 无限子弹卷变量 */
new bool:IsActionWXZDJ = false;

/* 装备治愈变量 */
new ZB_Healing[MAXPLAYERS+1];

/* 装备防御变量 */
new Float:ZB_EndEffect[MAXPLAYERS+1];

/* 装备火焰抗性变量 */
new Float:ZB_FireEnd[MAXPLAYERS+1];
/* 装备枪械伤害变量 */
new Float:ZB_GunDmg[MAXPLAYERS+1];
/* 装备魔力上限变量 */
new ZB_MPBuffer[MAXPLAYERS+1];
/* 装备枪械攻速变量 */
new Float:ZB_GunSpeed[MAXPLAYERS+1];



/* 道具装备店刷新 */
static Float:ItemBuyRadio[2] = { 90.0, 65.0 };
new ItemBuy_Type = -1;
new ItemBuy_Item = -1;
new ItemBuy_Num = 0;
new ItemBuy_Cash = 0;

/* 装备属性上限 */
#define Limit_ZB_Health			5000
#define Limit_ZB_Healing			100
#define Limit_ZB_End				1.0
#define Limit_ZB_FireEnd			0.99
#define Limit_ZB_GunDmg			5.0
#define Limit_ZB_MPBuffer		100000
#define Limit_ZB_GunSpeed		2.0
#define Limit_ZB_Speed			5.0
#define Limit_ZB_Jump			0.99

/* 卷轴默认持续时间 */
#define XH_Duration				80.0

/*******************************************************************************************
*								我的道具主菜单_开始
*******************************************************************************************/

//道具物品主面板
public MenuFunc_MyItem(Client)
{
	new Handle:menu = CreateMenu(MenuHandler_MyItem);
	decl String:line[64];

	SetMenuTitle(menu, "我的道具[K键]:");

	Format(line, sizeof(line), "领取新手套装");
	AddMenuItem(menu, "item0", line);

	Format(line, sizeof(line), "消耗物品(拥有数量:%d 剩余空间:%d)", GetHasXHItemCount(Client), PlayerXHItemSize[Client] - GetHasXHItemCount(Client));
	AddMenuItem(menu, "item1", line);

	Format(line, sizeof(line), "装备物品(拥有数量:%d 剩余空间:%d)", GetHasZBItemCount(Client), PlayerZBItemSize[Client] - GetHasZBItemCount(Client));
	AddMenuItem(menu, "item2", line);

	Format(line, sizeof(line), "扩充消耗物品栏(当前空间:%d 价格:%d$/格)", PlayerXHItemSize[Client], XH_COSTEFFECT[Client]);
	AddMenuItem(menu, "item3", line);

	Format(line, sizeof(line), "扩充装备物品栏(当前空间:%d 价格:%d$/格)", PlayerZBItemSize[Client], ZB_COSTEFFECT[Client]);
	AddMenuItem(menu, "item4", line);

	Format(line, sizeof(line), "查看自身所有装备的总属性");
	AddMenuItem(menu, "item6", line);

	Format(line, sizeof(line), "查看道具物品一览表");
	AddMenuItem(menu, "item8", line);

	Format(line, sizeof(line), "炼化||装备【炼化】");
	AddMenuItem(menu, "item9", line);

	SetMenuExitBackButton(menu, true);
	DisplayMenu(menu, Client, MENU_TIME_FOREVER);
}
/* 职业套装*/
public MenuFunc_GetZYTZ(Client)
{
	new Handle:menu = CreateMenu(MenuHandler_GetMyZYTZ);
	decl String:line[128];

	SetMenuTitle(menu, "免费领取新手套装:");
	Format(line, sizeof(line), "新手套装(适合:等级<=20未转职未转生玩家)");
	AddMenuItem(menu, "item0", line);

	SetMenuExitBackButton(menu, true);
	DisplayMenu(menu, Client, MENU_TIME_FOREVER);
}
public MenuHandler_GetMyZYTZ(Handle:menu, MenuAction:action, Client, param)
{
	if (action == MenuAction_End)
		CloseHandle(menu);
	else if (action == MenuAction_Cancel)
	{
		if (param == MenuCancel_ExitBack)
			MenuFunc_RPG(Client);
	}
	if(action == MenuAction_Select)
	{
		switch(param)
		{
			case 0: FetchZB(Client,ITZB_XSZB);	//新手职业套装
		}
	}
}

public FetchZB(Client,arg){
	switch(arg){
		case 60:
		{
			if(PLAYER_LV[Client] <= 20 && JD[Client] <= 0 && PlayerZBItemSize[Client] - GetHasZBItemCount(Client) > 0 && GetZBItemTime(Client, ITZB_XSZB) <= 0){
				SetZBItemTime(Client, 60, 10, true);
				CPrintToChatAll("\x05【公告】玩家%N成功领取了新手套装10日!", Client);
				CreateTimer(0.1, StatusUp, Client);
			}else{
				CPrintToChat(Client,"\x03【提示】领取[新手套装]失败!");
			}
		}
	}
}

public MenuHandler_MyItem(Handle:menu, MenuAction:action, Client, param)
{
	if (action == MenuAction_End)
		CloseHandle(menu);
	else if (action == MenuAction_Cancel)
	{
		if (param == MenuCancel_ExitBack)
			MenuFunc_RPG(Client);
	}
	if(action == MenuAction_Select)
	{
		switch(param)
		{
			case 0: MenuFunc_GetZYTZ(Client);	//新手职业套装
			case 1: MenuFunc_MyXHItem(Client); //消耗物品
			case 2: MenuFunc_MyZBItem(Client); //装备物品
            case 3: BuyXHItemBag(Client), MenuFunc_MyItem(Client); //扩充消耗物品栏
			case 4: BuyZBItemBag(Client), MenuFunc_MyItem(Client); //扩充装备物品栏
			case 5: RebuildStatus(Client, false, true); //查看所有装备属性
			case 6: MenuFunc_ViewAllItem(Client); //查看道具物品一览表
			case 7: MenuFunc_ZBLYZQ(Client); //装备合成
		}
	}

}


/* 查看道具物品一览表 */
public MenuFunc_ViewAllItem(Client)
{

	new Handle:menu = CreateMenu(MenuHandler_ViewAllItem);
	decl String:line[64];

	SetMenuTitle(menu, "道具物品一览表:");

	for (new i = ITEM_ZB_MAX; i > 0; i--)
	{
		Format(line, sizeof(line), "装备类: %s (基础爆率: %.3f％)", ItemName_ZB[i - 1], Item_ZB_Radio[i - 1]);
		AddMenuItem(menu, "装备", line);
	}

	for (new i = ITEM_XH_MAX; i > 0; i--)
	{
		Format(line, sizeof(line), "消耗类: %s (基础爆率: %.3f％)", ItemName_XH[i - 1], Item_XH_Radio[i - 1]);
		AddMenuItem(menu, "消耗", line);
	}

	SetMenuExitBackButton(menu, true);
	DisplayMenu(menu, Client, MENU_TIME_FOREVER);
}

public MenuHandler_ViewAllItem(Handle:menu, MenuAction:action, Client, param)
{
	if (action == MenuAction_End)
		CloseHandle(menu);
	else if (action == MenuAction_Cancel)
	{
		if (param == MenuCancel_ExitBack)
			MenuFunc_MyItem(Client);
	}
	if(action == MenuAction_Select)
	{
		decl String:info[16], type, item;
		GetMenuItem(menu, param, info, sizeof(info));
		if (StrEqual(info, "装备"))
			type = ITEM_ZB;
		else if (StrEqual(info, "消耗"))
			type = ITEM_XH;

		if(type == ITEM_ZB)
			item = ITEM_ZB_MAX - (param + 1);
		else if (type == ITEM_XH)
			item = ITEM_XH_MAX - (param - (ITEM_ZB_MAX - 1));

		if (param > -1)
			MenuFunc_ViewItemMSG(Client, Client, type, item, false);
	}
}

/* 道具装备店 */
public MenuFunc_BuyItem(Client)
{

	new Handle:menu = CreateMenu(MenuHandler_BuyItem);
	decl String:line[64];

	SetMenuTitle(menu, "道具装备专卖店: \n本店在每回合游戏开始后 \n将会有一定几率进货一些装备或道具 \n请随时关注该店 有几率抢到好道具好装备哦!");

	if (ItemBuy_Type >= 0 && ItemBuy_Item >= 0 && ItemBuy_Num > 0 && ItemBuy_Cash > 0)
	{
		if (ItemBuy_Type == ITEM_XH)
			Format(line, sizeof(line), "消耗类: %s (库存:%d 价格:%d$)", ItemName_XH[ItemBuy_Item], ItemBuy_Num, ItemBuy_Cash);
		else if (ItemBuy_Type == ITEM_ZB)
			Format(line, sizeof(line), "装备类: %s (时间:%d天 价格:%d$)", ItemName_ZB[ItemBuy_Item], ItemBuy_Num, ItemBuy_Cash);
		AddMenuItem(menu, "item0", line);
	}
	else
		AddMenuItem(menu, "item0", "当前没有任何库存", ITEMDRAW_DISABLED);


	SetMenuExitBackButton(menu, true);
	DisplayMenu(menu, Client, MENU_TIME_FOREVER);
}

public MenuHandler_BuyItem(Handle:menu, MenuAction:action, Client, param)
{
	if (action == MenuAction_End)
		CloseHandle(menu);
	else if (action == MenuAction_Cancel)
	{
		if (param == MenuCancel_ExitBack)
			MenuFunc_Buy(Client);
	}
	if(action == MenuAction_Select)
	{
		if (ItemBuy_Type == ITEM_XH)
		{
			if (PlayerXHItemSize[Client] - GetHasXHItemCount(Client) > 0)
			{
				if (ItemBuy_Item >= 0 && ItemBuy_Num > 0 && Cash[Client] >= ItemBuy_Cash)
				{
					Cash[Client] -= ItemBuy_Cash;
					ItemBuy_Num -= 1;
					PlayerItem[Client][ITEM_XH][ItemBuy_Item] += 1;
					CPrintToChatAll("\x03[道具] {red}%N \x03用了 {red}%d$ \x03在道具装备专卖店抢买到了 {red}[%s(1个)]", Client, ItemBuy_Cash, ItemName_XH[ItemBuy_Item]);
					EmitSoundToClient(Client, SOUND_GOTITEM);
					if (ItemBuy_Num <= 0)
					{
						ItemBuy_Type = -1;
						ItemBuy_Item = -1;
						ItemBuy_Num = 0;
						ItemBuy_Cash = 0;
					}
				}
				else
					PrintHintText(Client, "你没有足够的金钱购买该道具或库存不足!");
			}
			else
				PrintHintText(Client, "你没有足够的物品栏装入该道具!");
		}
		else if (ItemBuy_Type == ITEM_ZB)
		{
			if (PlayerZBItemSize[Client] - GetHasZBItemCount(Client) > 0)
			{
				if (ItemBuy_Item >= 0 && ItemBuy_Num > 0 && Cash[Client] >= ItemBuy_Cash)
				{
					Cash[Client] -= ItemBuy_Cash;
					SetZBItemTime(Client, ItemBuy_Item, ItemBuy_Num, false);
					CPrintToChatAll("\x03[道具] {red}%N \x03用了 {red}%d$ \x03在道具装备专卖店抢买到了 {red}[%s(%d天)]", Client, ItemBuy_Cash, ItemName_ZB[ItemBuy_Item], ItemBuy_Num);
					EmitSoundToClient(Client, SOUND_GOTITEM);
					ItemBuy_Type = -1;
					ItemBuy_Item = -1;
					ItemBuy_Num = 0;
					ItemBuy_Cash = 0;
				}
				else
					PrintHintText(Client, "你没有足够的金钱购买该道具或库存不足!");
			}
			else
				PrintHintText(Client, "你没有足够的物品栏装入该道具!");
		}
		else
			PrintHintText(Client, "道具库存不足!")

		MenuFunc_BuyItem(Client);
	}
}


/***********************************
*	 道具获得提示面板
***********************************/
public MenuFunc_GotItemMSG(Client, type, item, day, String:MSG[])
{

	new Handle:menu = CreatePanel();
	decl String:line[64];

	SetPanelTitle(menu, MSG);

	DrawPanelText(menu, " \n");
	DrawPanelText(menu, "════════════════");
	if (type == ITEM_XH)
		Format(line, sizeof(line), "消耗类: [%s]", ItemName_XH[item]);
	else if (type == ITEM_ZB)
		Format(line, sizeof(line), "装备类: [%s]", ItemName_ZB[item]);

	DrawPanelText(menu, line);
	if (type == ITEM_XH)
		Format(line, sizeof(line), "数量: 1个");
	else if (type == ITEM_ZB)
		Format(line, sizeof(line), "时间: %d天", day);
	DrawPanelText(menu, line);
	DrawPanelText(menu, "════════════════");
	DrawPanelText(menu, " \n");

	DrawPanelItem(menu, "我知道了");

	SendPanelToClient(menu, Client, MenuHandler_GotItemMSG, MENU_TIME_FOREVER);
	CloseHandle(menu);
}
public MenuHandler_GotItemMSG(Handle:menu, MenuAction:action, Client, param)
{
}

/*******************************************************************************************
*								我的道具主菜单_结束
*******************************************************************************************/

/*══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════*/

/*******************************************************************************************
*								物品查看_开始
*******************************************************************************************/

/* 物品查看_玩家列表 */
public MenuFunc_ViewItemPlayer(Client)
{
	decl String:line[256], String:name[64], has, itemcount;
	new Handle:menu = CreateMenu(MenuHandler_ViewItemPlayer);
	SetMenuTitle(menu, "查看物品:");
	has = 0;
	itemcount = 0;
	for (new i = 1; i <= MaxClients; i++)
	{
		if (IsValidPlayer(i, false) && i != Client)
		{
			itemcount = GetHasXHItemCount(i) + GetHasZBItemCount(i);
			if (itemcount > 0)
			{
				has++;
				Format(line, sizeof(line), " %N", i);
				GetClientName(i, name, sizeof(name));
				if (itemcount > 0)
					AddMenuItem(menu, name, line);
			}
		}
	}

	if (has <= 0)
		AddMenuItem(menu, "item0", "没有发现任何可用玩家!", ITEMDRAW_DISABLED)

	SetMenuExitBackButton(menu, true);
	DisplayMenu(menu, Client, MENU_TIME_FOREVER);
}
public MenuHandler_ViewItemPlayer(Handle:menu, MenuAction:action, Client, param)
{
	if (action == MenuAction_End)
		CloseHandle(menu);
	else if (action == MenuAction_Cancel)
	{
		if (param == MenuCancel_ExitBack)
			MenuFunc_MyItem(Client);
	}
	if(action == MenuAction_Select)
	{
		decl String:name[64], target;
		GetMenuItem(menu, param, name, sizeof(name));
		target = GetClientForName(name);
		if (IsValidPlayer(target, false))
			MenuFunc_ViewItem(Client, target);
	}
}

/* 物品查看_物品列表 */
public MenuFunc_ViewItem(Client, target)
{
	new Handle:menu = CreateMenu(MenuHandler_ViewItem);
	decl String:line[64], time;
	Format(line, sizeof(line), "查看 %N 的物品:", target);
	SetMenuTitle(menu, line);
	new has;
	for (new i; i < MaxItemNum[ITEM_XH]; i++)
	{
		if (PlayerItem[target][ITEM_XH][i] >= 1)
		{
			has++;
			Format(line, sizeof(line), "消耗类:%s (%d个)", ItemName_XH[i], PlayerItem[target][ITEM_XH][i]);
			AddMenuItem(menu, ItemName_XH[i], line);
		}
	}

	for (new i; i < MaxItemNum[ITEM_ZB]; i++)
	{
		time = GetZBItemTime(target, i);
		if (time > 0)
		{
			has++;
			Format(line, sizeof(line), "装备类:%s (%d天)", ItemName_ZB[i], time);
			AddMenuItem(menu, ItemName_ZB[i], line);
		}
	}

	if (has <= 0)
		AddMenuItem(menu, "not", "他没有任何物品", ITEMDRAW_DISABLED);

	SetMenuExitBackButton(menu, true);
	DisplayMenu(menu, Client, MENU_TIME_FOREVER);
}

public MenuHandler_ViewItem(Handle:menu, MenuAction:action, Client, param)
{
	if (action == MenuAction_End)
		CloseHandle(menu);
	else if (action == MenuAction_Cancel)
	{
		if (param == MenuCancel_ExitBack)
			MenuFunc_MyItem(Client);
	}
	if(action == MenuAction_Select)
	{
		decl String:info[32], String:item[32], type, id, target, String:title[32], style;
		GetMenuItem(menu, param, info, sizeof(info), style, item, sizeof(item));
		if (StrContains(item, "消耗类", false) >= 0)
			type = ITEM_XH;
		else if (StrContains(item, "装备类", false) >= 0)
			type = ITEM_ZB;

		GetMenuTitle(menu, title, sizeof(title));
		id = GetItemID(info, type);
		target = GetClientForName(title, true);
		if (IsValidPlayer(target, false) && id >= 0)
			MenuFunc_ViewItemMSG(Client, target, type, id);
	}
}


/* 物品查看_物品信息 */
stock MenuFunc_ViewItemMSG(Client, target, type, item, bool:viewplayer = true)
{
	decl String:line[256], overtime;
	new Handle:menu = CreatePanel();

	if (viewplayer)
	{
		if (type == ITEM_XH)
			Format(line, sizeof(line), "查看 %N 的物品: \n════ [%s] ════ \n \n拥有数量: %d", target, ItemName_XH[item], PlayerItem[target][ITEM_XH][item]);
		else if (type == ITEM_ZB)
			overtime = GetZBItemTime(target, item), Format(line, sizeof(line), "查看 %N 的物品: \n════ [%s] ════ \n \n剩余时间: %d 天", target, ItemName_ZB[item], overtime);
	}
	else
	{
		if (type == ITEM_XH)
			Format(line, sizeof(line), "查看消耗类: [%s] 物品:", ItemName_XH[item]);
		else if (type == ITEM_ZB)
			Format(line, sizeof(line), "查看装备类: [%s] 物品:", ItemName_ZB[item]);
	}

	SetPanelTitle(menu, line);

	DrawPanelText(menu, " \n");
	if (type == ITEM_XH)
	{
		DrawPanelText(menu, "道具说明:");
		DrawPanelText(menu, " \n");
		Format(line, sizeof(line), "%s", ItemMSG_XH[item]);
	}
	else if (type == ITEM_ZB)
	{
		DrawPanelText(menu, "装备说明:");
		DrawPanelText(menu, " \n");
		Format(line, sizeof(line), "%s", ItemMSG_ZB[item]);
	}

	DrawPanelText(menu, line);
	DrawPanelText(menu, " \n");

	DrawPanelItem(menu, "返回");
	DrawPanelItem(menu, "离开", ITEMDRAW_DISABLED);

	SendPanelToClient(menu, Client, MenuHandler_ViewItemMSG, MENU_TIME_FOREVER);
}
public MenuHandler_ViewItemMSG(Handle:menu, MenuAction:action, Client, param)
{
	if(action == MenuAction_Select)
	{
		if (param == 1)
			MenuFunc_MyItem(Client);
	}
}

/*******************************************************************************************
*								物品查看_结束
*******************************************************************************************/

/*══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════*/

/*******************************************************************************************
*								消耗类物品功能_开始
*******************************************************************************************/

/************************************
*	消耗类道具菜单
************************************/

//消耗类物品菜单
public MenuFunc_MyXHItem(Client)
{
	new Handle:menu = CreateMenu(MenuHandler_MyXHItem);
	decl String:line[64];
	SetMenuTitle(menu, "消耗类物品:");
	new has;
	for (new i; i < MaxItemNum[ITEM_XH]; i++)
	{
		if (PlayerItem[Client][ITEM_XH][i] >= 1)
		{
			has++;
			Format(line, sizeof(line), "%s (拥有数量: %d 个)", ItemName_XH[i], PlayerItem[Client][ITEM_XH][i]);
			AddMenuItem(menu, ItemName_XH[i], line);
		}
	}

	if (has <= 0)
		AddMenuItem(menu, "not", "你没有任何消耗物品", ITEMDRAW_DISABLED);

	SetMenuExitBackButton(menu, true);
	DisplayMenu(menu, Client, MENU_TIME_FOREVER);
}

public MenuHandler_MyXHItem(Handle:menu, MenuAction:action, Client, param)
{
	if (action == MenuAction_End)
		CloseHandle(menu);
	else if (action == MenuAction_Cancel)
	{
		if (param == MenuCancel_ExitBack)
			MenuFunc_MyItem(Client);
	}
	if(action == MenuAction_Select)
	{
		decl String:info[32], id;
		GetMenuItem(menu, param, info, sizeof(info));
		id = GetItemID(info, ITEM_XH);
		if (id >= 0)
			MenuFunc_ItemXHMSG(Client, id);
	}
}

//消耗类道具物品信息面板
public MenuFunc_ItemXHMSG(Client, item)
{
	decl String:line[256];
	new Handle:menu = CreatePanel();
	Format(line, sizeof(line), "════ [%s] ════ \n \n拥有数量: %d", ItemName_XH[item], PlayerItem[Client][ITEM_XH][item]);
	SetPanelTitle(menu, line);

	DrawPanelText(menu, " \n");
	DrawPanelText(menu, "道具说明:");
	DrawPanelText(menu, " \n");
	Format(line, sizeof(line), "%s", ItemMSG_XH[item]);
	DrawPanelText(menu, line);

	DrawPanelText(menu, " \n");

	DrawPanelItem(menu, "使用");
	DrawPanelItem(menu, "不要了");
	DrawPanelItem(menu, "返回");
	DrawPanelItem(menu, "离开", ITEMDRAW_DISABLED);

	UseXHItem[Client] = item;
	SendPanelToClient(menu, Client, MenuHandler_ItemXHMSG, MENU_TIME_FOREVER);
	CloseHandle(menu);
}
public MenuHandler_ItemXHMSG(Handle:menu, MenuAction:action, Client, param)
{
	if(action == MenuAction_Select)
	{
		if (UseXHItem[Client] >= 0)
		{
			switch(param)
			{
				case 1: Use_XHItem(Client, UseXHItem[Client]);
				case 2: MenuFunc_ItemXHDrop(Client, UseXHItem[Client]);
				case 4: MenuFunc_MyXHItem(Client);
			}
		}
	}
}

//使用消耗类道具
public Use_XHItem(Client, item)
{
	if (!IsValidPlayer(Client, false))
		return;

	if (!IsPlayerAlive(Client))
	{
		PrintHintText(Client, "死亡状态下无法使用道具!");
		return;
	}

	if (PlayerItem[Client][ITEM_XH][item] >= 1)
	{
		PlayerItem[Client][ITEM_XH][item] -= 1;
		EmitSoundToClient(Client, SOUND_USEITEM);
		if (item == ITXH_QTCZL)
			XHItem_QTCZL(Client);
		else if (item == ITXH_QTKBJ)
			XHItem_QTKBJ(Client);
		else if (item == ITXH_QTSXJ)
			XHItem_QTSXJ(Client);
		else if (item == ITXH_QTHDJ)
			XHItem_QTHDJ(Client);
		else if (item == ITXH_SMHFJ)
			XHItem_SMHFJ(Client);
		else if (item == ITXH_MLHFJ)
			XHItem_MLHFJ(Client);
		else if (item == ITXH_WXZDJ)
			XHItem_WXZDJ(Client);

	}
	else
		PrintHintText(Client, "════════════════ \n你没有 [%s] ,无法使用! \n════════════════", ItemName_XH[item]);
}

//丢弃消耗类道具
public MenuFunc_ItemXHDrop(Client, item)
{
	decl String:line[256];
	new Handle:menu = CreatePanel();
	Format(line, sizeof(line), "丢弃物品:");
	SetPanelTitle(menu, line);

	DrawPanelText(menu, "════════════════");

	Format(line, sizeof(line), "准备丢弃道具: \n══ [%s] ══ \n是否确认丢弃该道具一个?", ItemName_XH[item]);
	DrawPanelText(menu, line);

	DrawPanelText(menu, "════════════════");

	DrawPanelItem(menu, "确认");
	DrawPanelItem(menu, "离开", ITEMDRAW_DISABLED);

	UseXHItem[Client] = item;
	SendPanelToClient(menu, Client, MenuHandler_ItemXHDrop, MENU_TIME_FOREVER);
	CloseHandle(menu);
}
public MenuHandler_ItemXHDrop(Handle:menu, MenuAction:action, Client, param)
{
	if(action == MenuAction_Select)
	{
		if (param == 1)
		{
			PlayerItem[Client][ITEM_XH][UseXHItem[Client]] -= 1;
			PrintHintText(Client, "════════════════ \n你已丢弃了 [%s] 一个 \n════════════════", ItemName_XH[UseXHItem[Client]])
		}
	}
}

/************************************
*	消耗类道具功能
************************************/

/* 指挥官 */
public XHItem_QTCZL(Client)
{
	if (IsValidPlayer(Client, false))
	{
		CPrintToChatAll("\x03[道具] {red}%N \x03使用了{red}[指挥官]\x03 召回所有生还者去他的所在地!", Client);
		for (new i = 1; i <= MaxClients; i++)
		{
			if (IsValidPlayer(i, true, false) && GetClientTeam(i) == 2)
			{
				SetEntityMoveType(i, MOVETYPE_NONE);
				SetEntProp(i, Prop_Data, "m_takedamage", 0, 1);
			}
		}
		new Handle:pack;
		CreateDataTimer(1.0, Timer_QTCZL, pack, TIMER_REPEAT);
		WritePackCell(pack, Client);
		WritePackFloat(pack, GetEngineTime() + 6.0);
	}
}

/* 全体传召令_计时器 */
public Action:Timer_QTCZL(Handle:timer, Handle:pack)
{
	ResetPack(pack);
	new Client = ReadPackCell(pack);
	new Float:overtime = ReadPackFloat(pack);
	new Float:pos[3];
	if (IsValidPlayer(Client, false, false))
	{
		GetClientAbsOrigin(Client, pos);
		if (GetEngineTime() >= overtime)
		{
			PrintHintTextToAll("[指挥官] 传召完毕!");
			for (new i = 1; i <= MaxClients; i++)
			{
				if (IsValidPlayer(i, true, false) && GetClientTeam(i) == 2)
				{
					TeleportEntity(i, pos, NULL_VECTOR, NULL_VECTOR);
					SetEntityMoveType(i, MOVETYPE_WALK);
					SetEntProp(i, Prop_Data, "m_takedamage", 2, 1);
				}
			}

			KillTimer(timer);
		}
		else
			PrintHintTextToAll("[指挥官] %N 正在召唤你到他的所在地, 剩余 %d 秒", Client, RoundToNearest(overtime - GetEngineTime()));
	}
	else
		KillTimer(timer);
}

/* 疾风步卷轴 */
public XHItem_QTKBJ(Client)
{
	if (IsValidPlayer(Client, false))
	{
		CPrintToChatAll("\x03[道具] {red}%N \x03使用了{red}[疾风步卷轴]\x03 全体幸存者移动速度+100％", Client);
		for (new i = 1; i <= MaxClients; i++)
		{
			if (IsValidPlayer(i, true, false) && GetClientTeam(i) == 2)
				SetEntPropFloat(i, Prop_Send, "m_flLaggedMovementValue", 2.0);
		}
		new Handle:pack;
		CreateDataTimer(1.0, Timer_QTKBJ, pack, TIMER_REPEAT);
		WritePackCell(pack, Client);
		WritePackFloat(pack, GetEngineTime() + XH_Duration);
	}
}

/* 全体狂暴卷_计时器 */
public Action:Timer_QTKBJ(Handle:timer, Handle:pack)
{
	ResetPack(pack);
	new Client = ReadPackCell(pack);
	new Float:overtime = ReadPackFloat(pack);
	if (GetEngineTime() < overtime)
	{
		PrintHintTextToAll("[疾风步卷轴] 全体移动速度+100％,剩余 %d 结束.", RoundToNearest(overtime - GetEngineTime()));

		for (new i = 1; i <= MaxClients; i++)
		{
			if (IsValidPlayer(i, true, false) && GetClientTeam(i) == 2)
				SetEntPropFloat(i, Prop_Send, "m_flLaggedMovementValue", 2.0);
		}
	}
	else
	{
		if (IsValidPlayer(Client, false))
			CPrintToChatAll("\x03[道具] {red}%N \x03使用的 {red}[疾风步卷轴]\x03 已停止,全体移动速度还原!", Client);
		for (new i = 1; i <= MaxClients; i++)
		{
			if (IsValidPlayer(i, true, false) && GetClientTeam(i) == 2)
				CreateTimer(0.1, StatusUp, i);
		}
		KillTimer(timer);
	}
}


/* 速射卷轴 */
public XHItem_QTSXJ(Client)
{
	if (IsValidPlayer(Client, false))
	{
		CPrintToChatAll("\x03[道具] {red}%N \x03使用了{red}[速射卷轴]\x03 全体幸存者攻击速度+100％", Client);
		IsActionQTSXJ = true;
		new Handle:pack;
		CreateDataTimer(1.0, Timer_QTSXJ, pack, TIMER_REPEAT);
		WritePackCell(pack, Client);
		WritePackFloat(pack, GetEngineTime() + XH_Duration);
	}
}

/* 全体嗜血卷_计时器 */
public Action:Timer_QTSXJ(Handle:timer, Handle:pack)
{
	ResetPack(pack);
	new Client = ReadPackCell(pack);
	new Float:overtime = ReadPackFloat(pack);
	if (GetEngineTime() < overtime)
	{
		PrintHintTextToAll("[速射卷轴] 全体攻击速度+100％,剩余 %d 结束.", RoundToNearest(overtime - GetEngineTime()));
		if (!IsActionQTSXJ)
			IsActionQTSXJ = true;
	}
	else
	{
		if (IsValidPlayer(Client, false))
			CPrintToChatAll("\x03[道具] {red}%N \x03使用的 {reed}[速射卷轴]\x03 已停止,全体攻击速度还原!", Client);
		IsActionQTSXJ = false;
		KillTimer(timer);
	}
}

/* 快速装填卷轴 */
public XHItem_QTHDJ(Client)
{
	if (IsValidPlayer(Client, false))
	{
		CPrintToChatAll("\x03[道具] {red}%N \x03使用了(red}[快速装填卷轴]\x03 全体幸存者换弹速度+100％", Client);
		IsActionQTHDJ = true;
		new Handle:pack;
		CreateDataTimer(1.0, Timer_QTHDJ, pack, TIMER_REPEAT);
		WritePackCell(pack, Client);
		WritePackFloat(pack, GetEngineTime() + XH_Duration);
	}
}

/* 全体换弹卷_计时器 */
public Action:Timer_QTHDJ(Handle:timer, Handle:pack)
{
	ResetPack(pack);
	new Client = ReadPackCell(pack);
	new Float:overtime = ReadPackFloat(pack);
	if (GetEngineTime() < overtime)
	{
		PrintHintTextToAll("[快速装填卷轴] 全体换弹速度+100％,剩余 %d 结束.", RoundToNearest(overtime - GetEngineTime()));
		if (!IsActionQTHDJ)
			IsActionQTHDJ = true;
	}
	else
	{
		if (IsValidPlayer(Client, false))
			CPrintToChatAll("\x03[道具] {red}%N \x03使用的 {red}[快速装填卷轴]\x03 已停止,全体换弹速度还原!", Client);
		IsActionQTHDJ = false;
		KillTimer(timer);
	}
}

/* 生命恢复卷轴 */
public XHItem_SMHFJ(Client)
{
	if (IsValidPlayer(Client, false))
	{
		CPrintToChatAll("\x03[道具] {red}%N \x03使用了{red}[生命恢复卷轴] \x03使用者生命值瞬间恢复至满!", Client);
		new maxhealth = GetEntProp(Client, Prop_Data, "m_iMaxHealth");
		SetEntProp(Client, Prop_Data, "m_iHealth", maxhealth);
	}
}

/* 魔力恢复卷轴 */
public XHItem_MLHFJ(Client)
{
	if (IsValidPlayer(Client, false))
	{
		CPrintToChatAll("\x03[道具] {red}%N \x03使用了{red}[魔力恢复卷轴] \x03使用者魔法值瞬间恢复至满!", Client);
		MP[Client] = MaxMP[Client];
	}
}

/* 无限子弹卷轴 */
public XHItem_WXZDJ(Client)
{
	if (IsValidPlayer(Client, false))
	{
		CPrintToChatAll("\x03[道具] {red}%N \x03使用了{red}[无限子弹卷轴]\x03全体幸存者无限子弹持续%.60f秒!", Client, XH_Duration);
		IsActionWXZDJ = true;
		new Handle:pack;
		CreateDataTimer(1.0, Timer_WXZDJ, pack, TIMER_REPEAT);
		WritePackCell(pack, Client);
		WritePackFloat(pack, GetEngineTime() + XH_Duration);
	}
}

/* 无限子弹卷_计时器 */
public Action:Timer_WXZDJ(Handle:timer, Handle:pack)
{
	ResetPack(pack);
	new Client = ReadPackCell(pack);
	new Float:overtime = ReadPackFloat(pack);
	if (GetEngineTime() < overtime)
	{
		PrintHintTextToAll("[无限子弹卷轴] 全体幸存者无限子弹,剩余 %d 结束.", RoundToNearest(overtime - GetEngineTime()));
		if (!IsActionWXZDJ)
			IsActionWXZDJ = true;
	}
	else
	{
		if (IsValidPlayer(Client, false))
			CPrintToChatAll("\x03[道具] {red}%N \x03使用的 {red}[无限子弹卷轴]\x03 已停止,无限子弹效果已经消失!", Client);
		IsActionWXZDJ = false;
		KillTimer(timer);
	}
}

/*******************************************************************************************
*								消耗类物品功能_结束
*******************************************************************************************/

/*══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════*/

/*******************************************************************************************
*								装备类物品功能_开始
*******************************************************************************************/

/************************************
*	装备类道具菜单
************************************/

//装备类物品菜单
public MenuFunc_MyZBItem(Client)
{
	new Handle:menu = CreateMenu(MenuHandler_MyZBItem);
	decl String:line[64];
	SetMenuTitle(menu, "装备类物品:");
	new has;
	new time;
	for (new i; i < MaxItemNum[ITEM_ZB]; i++)
	{
		time = GetZBItemTime(Client, i);
		if (time > 0)
		{
			has++;
			Format(line, sizeof(line), "%s (剩余时间: %d 天)", ItemName_ZB[i], time);
			AddMenuItem(menu, ItemName_ZB[i], line);
		}
	}

	if (has <= 0)
		AddMenuItem(menu, "not", "你没有任何装备物品", ITEMDRAW_DISABLED);

	SetMenuExitBackButton(menu, true);
	DisplayMenu(menu, Client, MENU_TIME_FOREVER);
}

public MenuHandler_MyZBItem(Handle:menu, MenuAction:action, Client, param)
{
	if (action == MenuAction_End)
		CloseHandle(menu);
	else if (action == MenuAction_Cancel)
	{
		if (param == MenuCancel_ExitBack)
			MenuFunc_MyItem(Client);
	}
	if(action == MenuAction_Select)
	{
		decl String:info[ITEM_ZB_MAX], id;		//装备总数
		GetMenuItem(menu, param, info, sizeof(info));
		id = GetItemID(info, ITEM_ZB);
		if (id >= 0)
			MenuFunc_ItemZBMSG(Client, id);
	}
}

//装备类道具物品信息面板
public MenuFunc_ItemZBMSG(Client, item)
{
	decl String:line[256];
	new Handle:menu = CreatePanel();
	new overtime = GetZBItemTime(Client, item);
	Format(line, sizeof(line), "════ [%s] ════ \n \n剩余时间: %d 天", ItemName_ZB[item], overtime);
	SetPanelTitle(menu, line);

	DrawPanelText(menu, " \n");
	DrawPanelText(menu, "装备说明:");
	DrawPanelText(menu, " \n");
	Format(line, sizeof(line), "%s", ItemMSG_ZB[item]);
	DrawPanelText(menu, line);

	DrawPanelText(menu, " \n");

	DrawPanelItem(menu, "不要了");
	if (item != ITZB_VP2Z && item != ITZB_VP3Z && item != ITZB_VP1Z && item != ITZB_VP4Z)
	DrawPanelItem(menu, "返回");
	DrawPanelItem(menu, "离开", ITEMDRAW_DISABLED);

	UseZBItem[Client] = item;
	SendPanelToClient(menu, Client, MenuHandler_ItemZBMSG, MENU_TIME_FOREVER);
	CloseHandle(menu);
}
public MenuHandler_ItemZBMSG(Handle:menu, MenuAction:action, Client, param)
{
	if(action == MenuAction_Select)
	{
		if (UseZBItem[Client] >= 0)
		{
			switch(param)
			{
				case 1: MenuFunc_ItemZBDrop(Client, UseZBItem[Client]);
				case 3:
				{
					if (UseZBItem[Client] != ITZB_VP1Z && UseZBItem[Client] != ITZB_VP2Z && UseZBItem[Client] != ITZB_VP3Z && UseZBItem[Client] != ITZB_VP4Z)
						MenuFunc_MyZBItem(Client);
				}
			}
		}
	}
}

//丢弃装备类道具
public MenuFunc_ItemZBDrop(Client, item)
{
	decl String:line[256];
	new Handle:menu = CreatePanel();
	Format(line, sizeof(line), "丢弃物品:");
	SetPanelTitle(menu, line);

	DrawPanelText(menu, "════════════════");

	Format(line, sizeof(line), "准备丢弃装备: \n══ [%s] ══ \n是否确认丢弃该装备?", ItemName_ZB[item]);
	DrawPanelText(menu, line);

	DrawPanelText(menu, "════════════════");

	DrawPanelItem(menu, "确认");
	DrawPanelItem(menu, "离开", ITEMDRAW_DISABLED);

	UseZBItem[Client] = item;
	SendPanelToClient(menu, Client, MenuHandler_ItemZBDrop, MENU_TIME_FOREVER);
	CloseHandle(menu);
}
public MenuHandler_ItemZBDrop(Handle:menu, MenuAction:action, Client, param)
{
	if(action == MenuAction_Select)
	{
		if (param == 1)
		{
			if (UseZBItem[Client] == ITZB_VP1Z || UseZBItem[Client] == ITZB_VP2Z || UseZBItem[Client] == ITZB_VP3Z || UseZBItem[Client] == ITZB_VP4Z)
			{
				PrintHintText(Client, "════════════════ \n[%s] 装备无法丢弃 \n════════════════", ItemName_ZB[UseZBItem[Client]]);
			}
			else
			{
				PlayerItem[Client][ITEM_ZB][UseZBItem[Client]] = 0;
				PrintHintText(Client, "════════════════ \n你已丢弃了 [%s] 装备 \n════════════════", ItemName_ZB[UseZBItem[Client]])
				CreateTimer(0.1, StatusUp, Client);
			}
		}
	}
}


/************************************
*	装备类道具功能
************************************/

//装备道具属性初始化
stock ResetPlayerZBData(Client, Float:Re_Speed, Re_Health, bool:Read = false)
{
	if (!IsValidPlayer(Client, false) || !IsValidEntity(Client))
		return;

	decl Float:f_speed, Float:f_gravity, f_health, String:text[64];

	PlayerZBIsOver(Client);

	if (VIP[Client] > 0 && PlayerItem[Client][ITEM_ZB][ITZB_VP3Z] == 0 && PlayerItem[Client][ITEM_ZB][ITZB_VP2Z] == 0 && PlayerItem[Client][ITEM_ZB][ITZB_VP1Z] == 0 && PlayerItem[Client][ITEM_ZB][ITZB_VP4Z] == 0)
	{
		if (VIP[Client] == 1)
			SetZBItemTime(Client, ITZB_VP3Z, CheckVipTimeLimit(Client));
		else if (VIP[Client] == 2)
			SetZBItemTime(Client, ITZB_VP2Z, CheckVipTimeLimit(Client));
		else if (VIP[Client] == 3)
			SetZBItemTime(Client, ITZB_VP1Z, CheckVipTimeLimit(Client));
		else if (VIP[Client] == 4)
			SetZBItemTime(Client, ITZB_VP4Z, CheckVipTimeLimit(Client));
		else if (VIP[Client] == 5)
			SetZBItemTime(Client, ITZB_VP4Z, CheckVipTimeLimit(Client));
		else if (VIP[Client] == 6)
			SetZBItemTime(Client, ITZB_VP4Z, CheckVipTimeLimit(Client));
	}
	else if (PlayerItem[Client][ITEM_ZB][ITZB_VP3Z] > 0 || PlayerItem[Client][ITEM_ZB][ITZB_VP2Z] > 0 || PlayerItem[Client][ITEM_ZB][ITZB_VP1Z] > 0 || PlayerItem[Client][ITEM_ZB][ITZB_VP4Z] > 0)
	{
		if (VIP[Client] <= 0)
		{
			SetZBItemTime(Client, ITZB_VP3Z, 0);
			SetZBItemTime(Client, ITZB_VP2Z, 0);
			SetZBItemTime(Client, ITZB_VP1Z, 0);
			SetZBItemTime(Client, ITZB_VP4Z, 0);
			SetZBItemTime(Client, ITZB_VP4Z, 0);
			SetZBItemTime(Client, ITZB_VP4Z, 0);
		}
	}

	f_speed = 0.0;
	f_gravity = 0.0;
	f_health = 0;
	ZB_Healing[Client] = 0;
	ZB_EndEffect[Client] = 0.0;
	ZB_FireEnd[Client] = 0.0;
	ZB_GunDmg[Client] = 0.0;
	ZB_MPBuffer[Client] = 0
	ZB_GunSpeed[Client] = 0.0;

	//VIP勋章
	if (GetZBItemTime(Client, ITZB_VP1Z) > 0)
		ZB_FireEnd[Client] += 0.6;
	if (GetZBItemTime(Client, ITZB_VP2Z) > 0)
		ZB_FireEnd[Client] += 0.9;
	if (GetZBItemTime(Client, ITZB_VP3Z) > 0)
		ZB_FireEnd[Client] += 1.2;
	if (GetZBItemTime(Client, ITZB_VP4Z) > 0)
		ZB_FireEnd[Client] += 1.5;


	//HP恢复比率
	if (GetZBItemTime(Client, ITZB_MMMM1) > 0)
		ZB_Healing[Client] += 40;
	if (GetZBItemTime(Client, ITZB_MMMM2) > 0)
		ZB_Healing[Client] += 40;
	if (GetZBItemTime(Client, ITZB_MMMM3) > 0)
		ZB_Healing[Client] += 20;
	if (GetZBItemTime(Client, ITZB_MMMM4) > 0)
		ZB_Healing[Client] += 10;

	//移动速度
	if (GetZBItemTime(Client, ITZB_TTT1) > 0)
		f_speed += 0.3;
	if (GetZBItemTime(Client, ITZB_TTT2) > 0)
		f_speed += 0.4;
	if (GetZBItemTime(Client, ITZB_TTT3) > 0)
		f_speed += 0.5;
	if (GetZBItemTime(Client, ITZB_TTT4) > 0)
		f_speed += 0.9;

	//跳跃高度
	if (GetZBItemTime(Client, ITZB_YXZY) > 0)
		f_gravity += 0.01;
	if (GetZBItemTime(Client, ITZB_GZY) > 0)
		f_gravity += 0.02;
	if (GetZBItemTime(Client, ITZB_SY) > 0)
		f_gravity += 0.04;

	//生命值
	if (GetZBItemTime(Client, ITZB_DJSMZD) > 0)
		f_health += 400;
	if (GetZBItemTime(Client, ITZB_ZJSMZD) > 0)
		f_health += 600;
	if (GetZBItemTime(Client, ITZB_GJSMZD) > 0)
		f_health += 800;
	if (GetZBItemTime(Client, ITZB_JPSMZD) > 0)
		ZB_Healing[Client] += 2000;

	//防御力
	if (GetZBItemTime(Client, ITZB_WWW4) > 0)
		ZB_EndEffect[Client] += 0.2;
	if (GetZBItemTime(Client, ITZB_WWW3) > 0)
		ZB_EndEffect[Client] += 0.3;
	if (GetZBItemTime(Client, ITZB_WWW2) > 0)
		ZB_EndEffect[Client] += 0.4;
	if (GetZBItemTime(Client, ITZB_WWW1) > 0)
		ZB_Healing[Client] += 2000;

	//火焰抗性
	if (GetZBItemTime(Client, ITZB_QQQ0) > 0)
		ZB_FireEnd[Client] += 0.2;
	if (GetZBItemTime(Client, ITZB_QQQ1) > 0)
		ZB_FireEnd[Client] += 0.3;
	if (GetZBItemTime(Client, ITZB_QQQ2) > 0)
		ZB_FireEnd[Client] += 0.4;
	if (GetZBItemTime(Client, ITZB_QQQ3) > 0)
		ZB_FireEnd[Client] += 0.8;
	if (GetZBItemTime(Client, ITZB_QQQ4) > 0)
	{
		ZB_FireEnd[Client] += 0.5;
		SetPlayerZBColor(Client,1);
	}

	//枪械攻击力
	if (GetZBItemTime(Client, ITZB_5555) > 0)
		ZB_GunDmg[Client] += 1;
	if (GetZBItemTime(Client, ITZB_6666) > 0)
		ZB_GunDmg[Client] += 2;
	if (GetZBItemTime(Client, ITZB_7777) > 0)
		ZB_GunDmg[Client] += 3;
	if (GetZBItemTime(Client, ITZB_8888) > 0)
		ZB_GunDmg[Client] += 4;

	//魔力上限
	if (GetZBItemTime(Client, ITZB_HHH1) > 0)
		ZB_MPBuffer[Client] += 1000;
	if (GetZBItemTime(Client, ITZB_HHH2) > 0)
		ZB_MPBuffer[Client] += 2000;
	if (GetZBItemTime(Client, ITZB_HHH3) > 0)
		ZB_MPBuffer[Client] += 3000;
	if (GetZBItemTime(Client, ITZB_HHH4) > 0)
		ZB_MPBuffer[Client] += 5000;

	//枪械射速
	if (GetZBItemTime(Client, ITZB_LLL1) > 0)
		ZB_GunSpeed[Client] += 0.1;
	if (GetZBItemTime(Client, ITZB_LLL2) > 0)
		ZB_GunSpeed[Client] += 0.2;
	if (GetZBItemTime(Client, ITZB_LLL3) > 0)
		ZB_GunSpeed[Client] += 0.3;
	if (GetZBItemTime(Client, ITZB_LLL4) > 0)
		ZB_GunSpeed[Client] += 0.4;

	//新手套装 速+25% 重+10% 攻+200% 射+10% 治+5 防+50% 生+50 蓝+1w 火-50%
	if (GetZBItemTime(Client, ITZB_XSZB) > 0){
		f_speed += 0.25;
		//f_gravity += 0.1;
		ZB_GunDmg[Client] += 2;
		ZB_GunSpeed[Client] += 0.1;
		ZB_Healing[Client] += 5;
		ZB_EndEffect[Client] += 0.5;
		f_health += 1000;
		//ZB_MPBuffer[Client] += 10000;
		ZB_FireEnd[Client] += 0.5;
	}
	//工程师套装 速度+20%  攻击+20% 治疗+5 防御+50% 生命+50 MP+2w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_DMXYZL) > 0){
		f_speed += 0.2;
		ZB_GunDmg[Client] += 2;
		ZB_Healing[Client] += 5;
		ZB_EndEffect[Client] += 0.5;
		f_health += 1000;
		//ZB_MPBuffer[Client] += 20000;
		ZB_FireEnd[Client] += 0.5;
	}
	//士兵套装 速度+10% 攻击+20% 射速+10% 治疗+5 防御+50% 生命+50 MP+1w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_AYLS) > 0){
		f_speed += 0.01;
		f_gravity += 0.2;
		ZB_GunDmg[Client] += 2;
		ZB_GunSpeed[Client] += 0.1;
		ZB_Healing[Client] += 5;
		ZB_EndEffect[Client] += 0.5;
		f_health += 1000;
		//ZB_MPBuffer[Client] += 10000;
		ZB_FireEnd[Client] += 0.5;
	}
	//生物专家套装 速度+20% 攻击+20% 射速+10% 治疗+5 防御+50% 生命+50 MP+1w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_WLYS) > 0){
		f_speed += 0.2;
		f_gravity += 0.2;
		ZB_GunDmg[Client] += 0.2;
		ZB_GunSpeed[Client] += 0.1;
		ZB_Healing[Client] += 5;
		ZB_EndEffect[Client] += 0.5;
		f_health += 1000;
		//ZB_MPBuffer[Client] += 10000;
		ZB_FireEnd[Client] += 0.5;
	}
	//心灵医生套装 速度+25%治疗+8 防御+60% 生命+100 MP+1.5w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_ZXZZ) > 0){
		f_speed += 0.25;
		f_gravity += 0.1;
		//ZB_GunDmg[Client] += 0.0;
		//ZB_GunSpeed[Client] += 0.1;
		ZB_Healing[Client] += 8;
		ZB_EndEffect[Client] += 0.6;
		f_health += 100;
		//ZB_MPBuffer[Client] += 15000;
		ZB_FireEnd[Client] += 0.5;
	}
	//魔法师套装 速度+20% 治疗+5 防御+50% 生命+80 MP+3w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_YGOK) > 0){
		f_speed += 0.2;
	    //f_gravity += 0.2;
		//B_GunDmg[Client] += 0.2;
		//ZB_GunSpeed[Client] += 0.1;
		ZB_Healing[Client] += 5;
		ZB_EndEffect[Client] += 0.5;
		f_health += 1000;
		//ZB_MPBuffer[Client] += 30000;
		ZB_FireEnd[Client] += 0.5;
	}
	//弹药师套装 速度+20% 治疗+6 防御+50% 生命+70 MP+6w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_DYSTZ) > 0){
		f_speed += 0.20;
		f_gravity += 0.2;
		//B_GunDmg[Client] += 0.2;
		ZB_GunSpeed[Client] += 0.1;
		ZB_Healing[Client] += 6;
		ZB_EndEffect[Client] += 0.5;
		f_health += 1000;
		//ZB_MPBuffer[Client] += 60000;
		ZB_FireEnd[Client] += 0.5;
	}
	//地狱使者套装 速度+30% 治疗+9 防御+50% 生命+50 MP+5w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_DYSZTZ) > 0){
		f_speed += 0.30;
		f_gravity += 0.1;
		ZB_GunDmg[Client] += 0.9;
		ZB_GunSpeed[Client] += 0.1;
		ZB_Healing[Client] += 9;
		ZB_EndEffect[Client] += 0.5;
		f_health += 1000;
		//ZB_MPBuffer[Client] += 50000;
		ZB_FireEnd[Client] += 0.5;
	}
	//死神套装 法伤+20000 速度+25% 治疗+6 防御+20% 生命+100 MP+2w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_SSZTZ) > 0){
		f_speed += 0.25;
		f_gravity += 0.1;
		//ZB_GunDmg[Client] += 0.2;
		//ZB_GunSpeed[Client] += 0.1;
		ZB_Healing[Client] += 6;
		ZB_EndEffect[Client] += 0.2
		f_health += 1000;
		ZB_MPBuffer[Client] += 20000;
		ZB_FireEnd[Client] += 0.5;
	}
	//黑暗行者套装 速度+20% 治疗+6 防御+50% 生命+80 MP+3w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_HAXZTZ) > 0){
		f_speed += 0.20;
	    //f_gravity += 0.1;
		//ZB_GunDmg[Client] += 0.2;
		//ZB_GunSpeed[Client] += 0.1;
		//ZB_Healing[Client] += 6;
		ZB_EndEffect[Client] += 0.5;
		f_health += 800;
		//ZB_MPBuffer[Client] += 30000;
		ZB_FireEnd[Client] += 0.5;
	}
	//死亡祭师套装 速度+20% 治疗+15 防御+50% 生命+80 MP+3w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_HAXZTZ) > 0){
		f_speed += 0.20;
		f_gravity += 0.1;
		//ZB_GunDmg[Client] += 0.2;
		//ZB_GunSpeed[Client] += 0.1;
		ZB_Healing[Client] += 15;
		ZB_EndEffect[Client] += 0.5;
		f_health += 800;
		//ZB_MPBuffer[Client] += 30000;
		ZB_FireEnd[Client] += 0.5;
	}
	//雷电使者套装 速度+26% 治疗+6 防御+50% 生命+60 MP+5w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_LDSZTZ) > 0){
		f_speed += 0.26;
		f_gravity += 0.1;
		//ZB_GunDmg[Client] += 0.2;
		//ZB_GunSpeed[Client] += 0.1;
		ZB_Healing[Client] += 6;
		ZB_EndEffect[Client] += 0.5;
		f_health += 600;
		//ZB_MPBuffer[Client] += 50000;
		ZB_FireEnd[Client] += 0.5;
	}
	//影武者套装 速度+30% 治疗+6 防御+50% 生命+80 MP+6w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_YWZTZ) > 0){
		f_speed += 0.30;
		f_gravity += 0.1;
		//ZB_GunDmg[Client] += 0.2;
		//ZB_GunSpeed[Client] += 0.1;
		ZB_Healing[Client] += 6;
		ZB_EndEffect[Client] += 0.5;
		f_health += 800;
		//ZB_MPBuffer[Client] += 60000;
		ZB_FireEnd[Client] += 0.5;
	}
	//审判者套装 速度+20% 治疗+8 防御+50% 生命+80 MP+7w 火焰伤害-50%
	if (GetZBItemTime(Client, ITZB_NMBA) > 0){
		f_speed += 0.20;
		f_gravity += 0.1;
		//ZB_GunDmg[Client] += 0.2;
		//ZB_GunSpeed[Client] += 0.1;
		ZB_Healing[Client] += 8;
		ZB_EndEffect[Client] += 0.5;
		f_health += 800;
		//ZB_MPBuffer[Client] += 70000;
		ZB_FireEnd[Client] += 0.5;
	}



	//钢铁之躯 // 治+6 防+10% 生+3000
	if (GetZBItemTime(Client, ITZB_SQ_GTZQ) > 0)
	{
		ZB_Healing[Client] += 6;
		ZB_EndEffect[Client] += 0.1;
		f_health += 3000;
		SetPlayerZBColor(Client,1);
	}

	//轻盈之躯 //速+50% 跳+20%
	if (GetZBItemTime(Client, ITZB_SQ_QYZQ) > 0)
	{
		f_speed += 0.5;
		f_gravity += 0.1;
		SetPlayerZBColor(Client,1);
	}

	//狂暴之躯 //攻+500% 射+25%
	if (GetZBItemTime(Client, ITZB_SQ_KBZQ) > 0)
	{
		ZB_GunDmg[Client] += 5;
		ZB_GunSpeed[Client] += 0.25;
		SetPlayerZBColor(Client,1);
	}

	//至尊头盔 //蓝+1万
	if (GetZBItemTime(Client, ITZB_ZSTK) > 0)
	{
		ZB_MPBuffer[Client] += 10000;
		SetPlayerZBColor(Client,2);
	}

	//至尊铠甲 //火+60%
	if (GetZBItemTime(Client, ITZB_ZSKJ) > 0)
	{
		ZB_FireEnd[Client] += 0.60;
		SetPlayerZBColor(Client,2);
	}

	//至尊护腿 //跳+26%
	if (GetZBItemTime(Client, ITZB_ZSKZ) > 0)
	{
		f_gravity += 0.26;
		SetPlayerZBColor(Client,2);
	}

	//至尊鞋子 //速+60%
	if (GetZBItemTime(Client, ITZB_ASDF) > 0)
	{
		f_speed += 0.6
		SetPlayerZBColor(Client,2);
	}

	//至尊项链 //回血+40滴
	if (GetZBItemTime(Client, ITZB_ZSXL) > 0)
	{
		ZB_Healing[Client] += 40;
		SetPlayerZBColor(Client,2);
	}

	//至尊武器 //射速+10%
	if (GetZBItemTime(Client, ITZB_ZSWQ) > 0)
	{
		ZB_GunSpeed[Client] += 0.1;
		SetPlayerZBColor(Client,2);
	}


	//至尊生命盾 //血+5000
	if (GetZBItemTime(Client, ITZB_ZSMD) > 0)
	{
		f_health += 5000;
		SetPlayerZBColor(Client,2);
	}


    //亡灵手杖【武器】 //射速+10%
	if (GetZBItemTime(Client, ITZB_LKJA) > 0)
	{
		ZB_GunSpeed[Client] += 0.10;
		SetPlayerZBColor(Client,3);
	}

	//龙王头盔【头盔】 //蓝+20000
	if (GetZBItemTime(Client, ITZB_HKLA) > 0)
	{
		ZB_MPBuffer[Client] += 20000;
		SetPlayerZBColor(Client,3);
	}

	//死神舞步【鞋子】 //速度+90%
	if (GetZBItemTime(Client, ITZB_AZSXD) > 0)
	{
		f_speed += 0.9;
		SetPlayerZBColor(Client,3);
	}

	//亡灵护甲【护甲】 //血+600
	if (GetZBItemTime(Client, ITZB_YDSB) > 0)
	{
		f_health += 600;
		SetPlayerZBColor(Client,3);
	}



	//全能神器
	if (GetZBItemTime(Client, ITZB_AWCS) > 0)
	{
	//[神器]暗黑(新手)		速度+200% 重力+10% 攻击+500% 射速+20% 治疗+30 防御+20% 生命+200火焰伤害-10%
		f_speed += 2;
		f_gravity += 0.1;
		ZB_GunDmg[Client] += 5;
		ZB_GunSpeed[Client] += 0.2;
		ZB_Healing[Client] += 30;
		ZB_EndEffect[Client] += 0.2;
		//ZB_GunSpeed[Client] += 0.1;
		//ZB_GunDmg[Client] += 0.02;
		f_health += 2000;
		//ZB_MPBuffer[Client] += 80000;
		ZB_FireEnd[Client] += 0.10;
		SetPlayerZBColor(Client,13);
	}



	//维爱勋章【勋章】
	if (GetZBItemTime(Client, ITZB_WAXZ) > 0)
	{
	//维爱勋章【勋章】	//移动速度+30% 重力+20% 攻击力+300% 射速+20% 生命恢复+30 防御加成+40%  生命+300  减少火焰伤害+30%
		f_speed += 0.30;
		f_gravity += 0.1;
		ZB_GunDmg[Client] += 3;
		ZB_GunSpeed[Client] += 0.2;
		ZB_Healing[Client] += 30;
		ZB_EndEffect[Client] += 0.4;
		//ZB_GunSpeed[Client] += 0.1;
		//ZB_GunDmg[Client] += 0.08;
		f_health += 3000;
		//ZB_MPBuffer[Client] += 100000;
		ZB_FireEnd[Client] += 0.30;
		SetPlayerZBColor(Client,12);
	}



	//紫炎套装
	if (GetZBItemTime(Client, ITZB_TYLMB) > 0)
	{
	//专属紫炎套装	//移动+50% 重力+20% 攻击力+1000% 射速+25% 治疗+20 防御+40% 生命+200减少火焰伤害+20%
		f_speed += 0.5;
		f_gravity += 0.1;
		ZB_GunDmg[Client] += 10;
		ZB_GunSpeed[Client] += 0.25;
		ZB_Healing[Client] += 20;
		ZB_EndEffect[Client] += 0.4;
		//ZB_GunSpeed[Client] += 0.1;
		//ZB_GunDmg[Client] += 0.08;
		f_health += 2000;
		ZB_MPBuffer[Client] += 20000;
		ZB_FireEnd[Client] += 0.20;
		SetPlayerZBColor(Client,8);
	}

	//恶魔套装
	if (GetZBItemTime(Client, ITZB_TYDAG) > 0)
	{
	//恶魔套装 		//移动+55% 重力+20% 攻击+100% 射速+30% 回血+30 防御+50% 生命+200 蓝+30万 火+25%
		f_speed += 0.55;
		f_gravity += 0.1;
		ZB_GunDmg[Client] += 1;
		ZB_GunSpeed[Client] += 0.3;
		ZB_Healing[Client] += 30;
		ZB_EndEffect[Client] += 0.5;
		//ZB_GunSpeed[Client] += 0.1;
		//ZB_GunDmg[Client] += 0.08;
		f_health += 2000;
		ZB_MPBuffer[Client] += 20000;
		ZB_FireEnd[Client] += 0.25;
		SetPlayerZBColor(Client,9);
	}

	//死亡烈狱套装
	if (GetZBItemTime(Client, ITZB_TYQWA) > 0)
	{
	//死亡练狱套装 //移动+60% 重力+25% 攻击+1000% 射速+40% 回血+35 防御+50% 生命+800 火+50%
		f_speed += 0.6;
		f_gravity += 0.25;
		ZB_GunDmg[Client] += 10;
		ZB_GunSpeed[Client] += 0.4;
		ZB_Healing[Client] += 35;
		ZB_EndEffect[Client] += 0.5;
		//ZB_GunSpeed[Client] += 0.1;
		//ZB_GunDmg[Client] += 0.08;
		f_health += 800;
		//ZB_MPBuffer[Client] += 100000;
		ZB_FireEnd[Client] += 0.50;
		SetPlayerZBColor(Client,10);
	}

	//噩梦套装
	if (GetZBItemTime(Client, ITZB_TYDS) > 0)
	{
	//噩梦套装	//移动+90% 重力+30% 攻击+500% 射速+50% 回血+50 防御+70% 生命+800蓝+50万 火+30%
		f_speed += 0.9;
		f_gravity += 0.3;
		ZB_GunDmg[Client] += 5;
		ZB_GunSpeed[Client] += 0.5;
		ZB_Healing[Client] += 50;
		ZB_EndEffect[Client] += 0.7;
		//ZB_GunSpeed[Client] += 0.1;
		//ZB_GunDmg[Client] += 0.08;
		f_health += 800;
		ZB_MPBuffer[Client] += 30000;
		ZB_FireEnd[Client] += 0.30;
		SetPlayerZBColor(Client,11);
	}

	//龙王套装
	if (GetZBItemTime(Client, ITZB_JKAS) > 0)
	{
		//龙王套装		///移动+100% 重力+35% 攻击+1500% 射速+50% 回血+40 防御+50%  生命+800  火+35%
		f_speed += 1;
		f_gravity += 0.35;
		ZB_GunDmg[Client] += 15;
		ZB_GunSpeed[Client] += 0.5;
		ZB_Healing[Client] += 40;
		ZB_EndEffect[Client] += 0.5;
		//ZB_GunSpeed[Client] += 0.2;
		//ZB_GunDmg[Client] += 0.06;
		f_health += 800;
		//ZB_MPBuffer[Client] += 150000;
		ZB_FireEnd[Client] += 0.35;
		SetPlayerZBColor(Client,5);
	}

	//死神套装
	if (GetZBItemTime(Client, ITZB_SSNM) > 0)
	{
		//死神套装【死亡圣器】	/移动+80% 重力+40% 攻击+1500% 射速+50% 回血+3000 防御+60%  生命+800  火+40%
		f_speed += 0.8;
		f_gravity += 0.1;
		ZB_GunDmg[Client] += 15;
		ZB_GunSpeed[Client] += 0.5;
		ZB_Healing[Client] += 3000;
		ZB_EndEffect[Client] += 0.6;
		//ZB_GunSpeed[Client] += 0.2;
		//ZB_GunDmg[Client] += 0.05;
		f_health += 800;
		//ZB_MPBuffer[Client] += 150000;
		ZB_FireEnd[Client] += 0.4;
		SetPlayerZBColor(Client,6);
	}

	//死亡圣器
	if (GetZBItemTime(Client, ITZB_SWEP) > 0)
	{
		//死亡圣器【地狱神器】	//移动速度+80% 重力+40% 攻击力+1000% 射速+60% 生命恢复+70 防御加成+55%  生命+800 减少火焰伤害+40%
		f_speed += 0.08;
		f_gravity += 0.1;
		ZB_GunDmg[Client] += 10;
		ZB_GunSpeed[Client] += 0.6;
		ZB_Healing[Client] += 70;
		ZB_EndEffect[Client] += 0.55;
		//ZB_GunSpeed[Client] += 0.2;
		//ZB_GunDmg[Client] += 0.06;
		f_health += 800;
		//ZB_MPBuffer[Client] += 150000;
		ZB_FireEnd[Client] += 0.4;
		SetPlayerZBColor(Client,6);
	}

	//圣灵之光【神器】
	if (GetZBItemTime(Client, ITZB_SLJK) > 0)
	{
		//圣灵之光【天堂神器】	//移动+100% 重力+60% 攻击+1000% 射速+60% 回血+50 防御+70%  生命+2000 火+100%
		f_speed += 1;
		f_gravity += 0.1;
		ZB_GunDmg[Client] += 10;
		ZB_GunSpeed[Client] += 0.6;
		ZB_Healing[Client] += 50;
		ZB_EndEffect[Client] += 0.7;
		//ZB_GunSpeed[Client] += 0.2;
		//ZB_GunDmg[Client] += 0.06;
		f_health += 2000;
		//ZB_MPBuffer[Client] += 150000;
		ZB_FireEnd[Client] += 1.0;
		SetPlayerZBColor(Client,7);
	}

	//圣灵魔光【头盔】
	if (GetZBItemTime(Client, ITZB_SLOP) > 0)
	{
		//圣灵魔光【天堂神器】	//回血+50 生命+1200 火+60%
		ZB_Healing[Client] += 50;
		f_health += 10000;
		ZB_FireEnd[Client] += 0.6;
		SetPlayerZBColor(Client,7);
	}

	//【天堂神器】冰封【护甲】
	if (GetZBItemTime(Client, ITZB_FKEQ) > 0)
	{
		//【天堂神器】冰封	//防御+100%

		ZB_EndEffect[Client] += 1.0;
		SetPlayerZBColor(Client,7);
	}

	//【天堂神器】神灵羽翼【翅膀】
	if (GetZBItemTime(Client, ITZB_SLYY) > 0)
	{
		//【天堂神器】神灵羽翼	//移动+100% 重力+70%
		f_speed += 1;
		f_gravity += 0.70;
		SetPlayerZBColor(Client,7);
	}

	//【天堂神器】神灵之剑
	if (GetZBItemTime(Client, ITZB_SQWE) > 0)
	{
		//【天堂神器】神灵之剑	//攻击1500% 蓝+3W
		ZB_GunDmg[Client] += 15;
		ZB_MPBuffer[Client] += 30000;
		SetPlayerZBColor(Client,7);
	}

	//樱花枪膛
	if (GetZBItemTime(Client, ITZB_YHCX) > 0)
	{
		//樱花枪膛	//攻击力1500%
		ZB_GunDmg[Client] += 15;
		ZB_Healing[Client] += 3000;


		SetPlayerZBColor(Client,4);
	}

	//樱花项链
	if (GetZBItemTime(Client, ITZB_YHWE) > 0)
	{
	    //樱花项链 //蓝+30000
		ZB_MPBuffer[Client] += 30000;
		SetPlayerZBColor(Client,4);
	}

	//圣灵勋章【神器】
	if (GetZBItemTime(Client, ITZB_TTAS) > 0)
	{
		//圣灵勋章【天堂神器】	///移动速度+100% 重力+50% 攻击力+700% 射速+70% 生命恢复+30 防御加成+40%  生命+1000 减少火焰伤害+30%
		f_speed += 1;
		f_gravity += 0.1;
		ZB_GunDmg[Client] += 7;
		ZB_GunSpeed[Client] += 0.7;
		ZB_Healing[Client] += 30;
		ZB_EndEffect[Client] += 0.4;
		//ZB_GunSpeed[Client] += 0.2;
		//ZB_GunDmg[Client] += 0.06;
		f_health += 1000;
		//ZB_MPBuffer[Client] += 100000;
		ZB_FireEnd[Client] += 0.30;
		SetPlayerZBColor(Client,7);
	}

	//黑暗之泣
	if (GetZBItemTime(Client, ITZB_HAFE) > 0)
	{
		//黑暗之泣	//移动速度+50% 攻击+1500%
		f_speed += 0.5;
		ZB_GunDmg[Client] += 15;
		SetPlayerZBColor(Client,5);
	}

    //黑暗骑士
	if (GetZBItemTime(Client, ITZB_HADF) > 0)
	{
		//黑暗骑士	//移动+50% 重力+30% 攻击+1500% 射速+400% 回血+20 防御+20%  生命+400  火+20%
		f_speed += 0.5;
		f_gravity += 0.1;
		ZB_GunDmg[Client] += 15;
		ZB_GunSpeed[Client] += 0.4;
		ZB_Healing[Client] += 20;
		ZB_EndEffect[Client] += 0.2;
		//ZB_GunSpeed[Client] += 0.2;
		//ZB_GunDmg[Client] += 0.06;
		f_health += 400;
		//ZB_MPBuffer[Client] += 100000;
		ZB_FireEnd[Client] += 0.20;
		SetPlayerZBColor(Client,7);
	}

    //黑暗加农
	if (GetZBItemTime(Client, ITZB_HAJ) > 0)
	{
		//黑暗加农	//攻击+1500% 射速+40%
		ZB_GunDmg[Client] += 15;
		ZB_GunSpeed[Client] += 0.4;
		SetPlayerZBColor(Client,7);
	}

    //雷神
	if (GetZBItemTime(Client, ITZB_LSZ) > 0)
	{
		//雷神	//攻击+2000% 射速+100%
		ZB_GunDmg[Client] += 20;
		ZB_GunSpeed[Client] += 1.0;
		SetPlayerZBColor(Client,8);
	}

    //无限之光
	if (GetZBItemTime(Client, ITZB_POI) > 0)
	{
		//无限之光	// 攻击+1000% 射速+20%  速度+30%
		ZB_GunDmg[Client] += 10;
		ZB_GunSpeed[Client] += 0.2;
		f_speed += 0.3;
		SetPlayerZBColor(Client,3);
	}

    //炎神枪膛
	if (GetZBItemTime(Client, ITZB_DRE) > 0)
	{
		//炎神枪膛	//攻击力+500%
		ZB_GunDmg[Client] += 5;
		SetPlayerZBColor(Client,5);
	}

    //炎神之靴
	if (GetZBItemTime(Client, ITZB_CCNM) > 0)
	{
		//炎神之靴	//移动+30%  射速+40%
		ZB_GunSpeed[Client] += 0.4;
		f_speed += 0.3;
		SetPlayerZBColor(Client,5);
	}

    //炎神之盾
	if (GetZBItemTime(Client, ITZB_LOI) > 0)
	{
		//炎神之盾	//生命+10000
		f_health += 10000;
		SetPlayerZBColor(Client,5);
	}

    //炎神护甲
	if (GetZBItemTime(Client, ITZB_DCW) > 0)
	{
		//炎神护甲	//防御+30%
		ZB_EndEffect[Client] += 0.3;
		SetPlayerZBColor(Client,5);
	}

    //炎神羽翼
	if (GetZBItemTime(Client, ITZB_LAS) > 0)
	{
		//炎神羽翼	//重量+40%
		f_gravity += 0.1;
		SetPlayerZBColor(Client,5);
	}

	//炎神魔戒
	if (GetZBItemTime(Client, ITZB_AAX) > 0)
	{
		ZB_Healing[Client] += 30;
		SetPlayerZBColor(Client,5);
	}


    //炎神套装 攻击力+30% 移动速度+40%  射速+40% 生命+500  重力+20% 治愈生命+40 MP+ 120000
	if (GetZBItemTime(Client, ITZB_FDS) > 0)
	{
		//炎神套装	//攻击+1000% 移动+40%  射速+40% 生命+500  重力+20% 回血+40 
		f_speed += 0.4;
		f_gravity += 0.1;
		ZB_GunDmg[Client] += 10;
		ZB_GunSpeed[Client] += 0.4;
		ZB_Healing[Client] += 40;
		f_health += 1000;
		//ZB_MPBuffer[Client] += 120000;
		SetPlayerZBColor(Client,5);
	}

    //龙王之怒 攻击+1500% 重力+10% 回血+20
	if (GetZBItemTime(Client, ITZB_DRXN) > 0)
	{
		f_gravity += 0.1;
		ZB_GunDmg[Client] += 15;
		ZB_Healing[Client] += 20;
		SetPlayerZBColor(Client,2);
	}

    //亡者之力 重力+20% 回血+60
	if (GetZBItemTime(Client, ITZB_NMFP) > 0)
	{
		f_gravity += 0.1;
		ZB_Healing[Client] += 60;
		SetPlayerZBColor(Client,4);
	}
	
	//末世之力[神] // 移动+50% 攻击+3000% 射速+300%  回血300  生命+20000%  火焰+800% 
	//末世之力[神]
	if (GetZBItemTime(Client, ITZB_SOS) > 0)
	{
		f_speed += 0.5;
		ZB_GunDmg[Client] += 30;
		ZB_GunSpeed[Client] += 3;	
		ZB_Healing[Client] += 6000;
		ZB_EndEffect[Client] += 30.0;
		f_health += 10000;
		//ZB_MPBuffer[Client] += 200000;
		ZB_FireEnd[Client] += 8.0;
		SetPlayerZBColor(Client,7);
	}		
	
	//末世之盾[神] //防御+800% 回血+3000  生命10000%  火800%  跳跃200% 
    //末世之盾[神]
	if (GetZBItemTime(Client, ITZB_ASN1) > 0)
	{
		ZB_EndEffect[Client] += 8.0;
		ZB_Healing[Client] += 6000;
		f_health += 10000;
		ZB_FireEnd[Client] += 8.0;
		//f_gravity += 2.0
	}		
	
	//末世之矛[神] //伤害3000% 抢戒200% 
    //末世之矛[神]
	if (GetZBItemTime(Client, ITZB_WQB2) > 0)
	{
		ZB_GunDmg[Client] += 30.0;
		ZB_GunSpeed[Client] += 2.0;
	}
	//末世之炎[神] //防御+800% 火800% 
    //末世之炎[神]
	if (GetZBItemTime(Client, ITZB_WES3) > 0)
	{
		ZB_EndEffect[Client] += 8.0;
		ZB_FireEnd[Client] += 3.0;
	}
	//末世之翼[神] //速度+90% 跳越+300% 
    //末世之翼[神]
	if (GetZBItemTime(Client, ITZB_JIO4) > 0)
	{
		f_speed += 0.9;
		f_gravity += 3;
	}
	//末世之手[神] //伤害+3000% 速度+300%
    //末世之手[神]
	if (GetZBItemTime(Client, ITZB_LKJ5) > 0)
	{
		ZB_GunDmg[Client] +=30.0;
		ZB_GunSpeed[Client] += 3.0;
	}	
	//小野的护肩 //mp+50000
	if (GetZBItemTime(Client, ITZB_BABA2) > 0)
	{
		ZB_MPBuffer[Client] += 50000;
	}
	//小野的头盔 //防御+80%
	if (GetZBItemTime(Client, ITZB_JOKA3) > 0)
	{
		ZB_EndEffect[Client] += 0.8;
		ZB_Healing[Client] += 15000;
	}
	//小野的腰带 //火炕+80% 回血+100
	if (GetZBItemTime(Client, ITZB_ASD4) > 0)
	{
		ZB_FireEnd[Client] += 0.8;
		ZB_Healing[Client] += 15000;
	}
	//小野的武器 //伤害+4000%
	if (GetZBItemTime(Client, ITZB_AAC6) > 0)
	{
		ZB_GunDmg[Client] += 40;
		ZB_MPBuffer[Client] += 50000;
	}
	//小野的护甲 //血量+20000%
	if (GetZBItemTime(Client, ITZB_AZS1) > 0)
	{
		f_health += 20000;
		ZB_Healing[Client] += 15000;
	}
	//小野的鞋子 //速度+70% 跳跃+90%
	if (GetZBItemTime(Client, ITZB_AA5) > 0)
	{
		f_speed += 0.7;
		f_gravity += 0.6
	}
	//10月1国庆套装//攻击+3000%防御+60%火炕+60%蓝+5万血+1万速度+100%跳跃+50
    //10月1国庆套装
	if (GetZBItemTime(Client, ITZB_ZZ111) > 0)
	{
		ZB_GunDmg[Client] += 30;
		ZB_EndEffect[Client] += 0.6;
		ZB_FireEnd[Client] += 0.6;
		ZB_MPBuffer[Client] += 50000;
		f_health += 10000;
		f_speed += 1;
		f_gravity += 0.5;
		ZB_Healing[Client] += 100;
	}	
    //狂战之魂套//劈砍+15000 伤害+3000 法伤+5万 生命+20000 防御+30 蓝+50000 回血3000 
    //狂战之魂套
	if (GetZBItemTime(Client, ITZB_YJZB1) > 0)
	{
		ZB_GunDmg[Client] += 30;
		ZB_EndEffect[Client] += 0.3;
		ZB_MPBuffer[Client] += 50000;
		f_health += 20000;
		ZB_Healing[Client] += 15000;
	}	
	//万圣节套装//劈砍+30000 伤害+4000 法伤+5万 速度+50 蓝+50000 回血3000 
    //万圣节套装
	if (GetZBItemTime(Client, ITZB_YJZB2) > 0)
	{
		ZB_GunDmg[Client] += 40;
		ZB_MPBuffer[Client] += 50000;
		ZB_Healing[Client] += 30000;
		f_speed += 0.5;
	}
	
	//属性上限
	if (ZB_FireEnd[Client] > 0.99)
		ZB_FireEnd[Client] = 0.99;
	if (ZB_GunSpeed[Client] > 1.0)
		ZB_GunSpeed[Client] = 1.0;
	if (ZB_EndEffect[Client] > 0.99)
		ZB_EndEffect[Client] = 0.99;
	if (1.0 - f_gravity < 0.2)
		f_gravity = 0.8;

	//属性设置
	if (f_speed + Re_Speed > Re_Speed)
		SetEntPropFloat(Client, Prop_Data, "m_flLaggedMovementValue", Re_Speed + f_speed);
	if (f_gravity > 0)
		SetEntityGravity(Client, 1.0 - f_gravity);
	if (f_health + Re_Health > Re_Health)
		SetEntProp(Client, Prop_Data, "m_iMaxHealth", Re_Health + f_health);


	//属性查看
	if (Read)
	{
		new Handle:menu = CreateMenu(MenuHandler_ItemDisData);
		SetMenuTitle(menu, "查看所有装备属性:");
		Format(text, sizeof(text), "生命加成:%d/%d", f_health, Limit_ZB_Health);
		AddMenuItem(menu, "item0", text, ITEMDRAW_DISABLED);
		Format(text, sizeof(text), "防御加成:%.0f％/%.0f％", ZB_EndEffect[Client] * 100.0, Limit_ZB_End * 100.0);
		AddMenuItem(menu, "item1", text, ITEMDRAW_DISABLED);
		Format(text, sizeof(text), "移动速度:%.0f％/%.0f％", f_speed * 100.0, Limit_ZB_Speed * 100.0);
		AddMenuItem(menu, "item2", text, ITEMDRAW_DISABLED);
		Format(text, sizeof(text), "生命恢复:%d/%d", ZB_Healing[Client], Limit_ZB_Healing);
		AddMenuItem(menu, "item3", text, ITEMDRAW_DISABLED);
		Format(text, sizeof(text), "跳跃高度:%.0f％/%.0f％", f_gravity * 100.0, Limit_ZB_Jump * 100.0);
		AddMenuItem(menu, "item4", text, ITEMDRAW_DISABLED);
		Format(text, sizeof(text), "火焰抗性:%.0f％/%.0f％", ZB_FireEnd[Client] * 100.0, Limit_ZB_FireEnd * 100.0);
		AddMenuItem(menu, "item5", text, ITEMDRAW_DISABLED);
		Format(text, sizeof(text), "枪械伤害:%.0f％/%.0f％", ZB_GunDmg[Client] * 100.0, Limit_ZB_GunDmg * 100.0);
		AddMenuItem(menu, "item6", text, ITEMDRAW_DISABLED);
		Format(text, sizeof(text), "魔力上限:%d/%d", ZB_MPBuffer[Client], Limit_ZB_MPBuffer);
		AddMenuItem(menu, "item7", text, ITEMDRAW_DISABLED);
		Format(text, sizeof(text), "枪械射速:%.0f％/%.0f％", ZB_GunSpeed[Client] * 100.0, Limit_ZB_GunSpeed * 100.0);
		AddMenuItem(menu, "item8", text, ITEMDRAW_DISABLED);
		SetMenuPagination(menu, MENU_NO_PAGINATION);
		SetMenuExitButton(menu, true);
		DisplayMenu(menu, Client, MENU_TIME_FOREVER);
	}
}

//查看所有属性面板回调
public MenuHandler_ItemDisData(Handle:menu, MenuAction:action, Client, param)
{
	if (action == MenuAction_End)
		CloseHandle(menu);
	else if (action == MenuAction_Cancel)
	{
		if (param == MenuCancel_ExitBack)
			MenuFunc_MyItem(Client);
	}
}

//装备到期检查
public PlayerZBIsOver(Client)
{
	for (new i; i < ITEM_ZB_MAX; i++)
	{
		if (GetZBItemTime(Client, i) <= 0)
			PlayerItem[Client][ITEM_ZB][i] = 0;
	}
}
/*******************************************************************************************
*								装备类物品功能_结束
*******************************************************************************************/

/*══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════*/

/*******************************************************************************************
*								道具系统_其他功能_开始
*******************************************************************************************/

/* 取装备剩余时间 */
public GetZBItemTime(Client, item)
{
	if (PlayerItem[Client][ITEM_ZB][item] > 0)
	{
		new String:s_itemtime[16];
		new String:s_itemyear[16];
		new String:s_itemday[16];
		new i_itemyear;
		new i_itemday;
		new year = GetThisYear();
		new today = GetToday();
		new maxday = GetThisYearMaxDay();
		new last;

		IntToString(PlayerItem[Client][ITEM_ZB][item], s_itemtime, sizeof(s_itemtime));

		s_itemyear[0] = s_itemtime[0];
		s_itemyear[1] = s_itemtime[1];
		s_itemyear[2] = s_itemtime[2];
		s_itemyear[3] = s_itemtime[3];
		s_itemday[0]  = s_itemtime[4];
		s_itemday[1]  = s_itemtime[5];
		s_itemday[2]  = s_itemtime[6];

		i_itemyear = StringToInt(s_itemyear);
		i_itemday = StringToInt(s_itemday);

		if (i_itemyear > 0 && i_itemday > 0)
		{
			if (year == i_itemyear)
			{
				last = i_itemday - today;
				if (last > 0)
					return last;
				else
					return 0;
			}
			else if (i_itemyear > year)
			{
				new moreyear = i_itemyear - year;
				new moreday = maxday - today;

				for (new i = 1; i < moreyear; i++)
					moreday += GetThisYearMaxDay(year + i);

				last = moreday + i_itemday;

				if (last > 0)
					return last;
				else
					return 0;
			}
			else
				return 0;
		}
	}

	return 0;
}

/* 给予装备类道具 */
stock SetZBItemTime(Client, item, day, bool:Print = true, bool:Superimposed = true)
{
	new year = GetThisYear();
	new today = GetToday();
	new maxday = GetThisYearMaxDay();
	new String:s_year[16];
	new String:s_day[16];
	new String:s_time[16];
	new i_time;
	if (IsValidPlayer(Client, false))
	{
		if (day <= 0)
			PlayerItem[Client][ITEM_ZB][item] = 0;
		else
		{
			new i_day = today + day;
			new de_day = GetZBItemTime(Client, item);
			if (de_day > 0)
			{
				if (Superimposed)
					i_day += de_day;
			}

			if (i_day <= maxday)
			{
				IntToString(year, s_year, sizeof(s_year));
				IntToString(i_day, s_day, sizeof(s_day));
				Format(s_time, sizeof(s_time), "%s%s", s_year, s_day);
				i_time = StringToInt(s_time);
				if (i_time > 10)
				{
					PlayerItem[Client][ITEM_ZB][item] = i_time;
					CreateTimer(0.1, StatusUp, Client);
					if (Print)
						CPrintToChatAll("\x03[道具] {red}%N \x03获得了 {red}[%s(%d天)]", Client, ItemName_ZB[item], day);
				}
			}
			else
			{
				new moreday = i_day - maxday;
				new moreyear = year + 1;
				new nextyearmaxday = GetThisYearMaxDay(moreyear);

				while (moreday - nextyearmaxday > 0)
				{
					moreday = moreday - nextyearmaxday;
					moreyear += 1;
					nextyearmaxday = GetThisYearMaxDay(moreyear);
				}

				IntToString(moreyear, s_year, sizeof(s_year));
				IntToString(moreday, s_day, sizeof(s_day));
				Format(s_time, sizeof(s_time), "%s%s", s_year, s_day);
				i_time = StringToInt(s_time);
				if (i_time > 10)
				{
					PlayerItem[Client][ITEM_ZB][item] = i_time;
					CreateTimer(0.1, StatusUp, Client);
					if (Print)
						CPrintToChatAll("\x03[道具] {red}%N \x03获得了 {red}[%s(%d天)]", Client, ItemName_ZB[item], day);
				}
			}
		}
	}
}

/* 格式化装备时间文本 */
stock String:ForStringZBTime(Client, item)
{
	decl String:Time[8], String:s_year[4], String:s_day[3], i_day;
	IntToString(PlayerItem[Client][ITEM_ZB][item], Time, sizeof(Time));
	s_year[0] = Time[0];
	s_year[1] = Time[1];
	s_year[2] = Time[2];
	s_year[3] = Time[3];
	s_day[0] = Time[4];
	s_day[1] = Time[5];
	s_day[2] = Time[6];
	Time[7] = 0;
	i_day = StringToInt(s_day);
	if (i_day > 99)
		return Time;
	else if (i_day <= 9)
	{
		if (s_day[0] != '0')
		{
			Time[4] = '0';
			Time[5] = '0';
			Time[6] = s_day[0];
			return Time;
		}
		else
			return Time;
	}
	else
	{
		if (s_day[0] != '0')
		{
			Time[4] = '0';
			Time[5] = s_day[0];
			Time[6] = s_day[1];
			return Time;
		}
		else
			return Time;
	}
}

/* 格式化装备时间文本 */
stock String:ForStringGRKTime(Client, item)
{
	decl String:Time[8], String:s_year[4], String:s_day[3], i_day;
	IntToString(PlayerItem[Client][ITEM_GRK][item], Time, sizeof(Time));
	s_year[0] = Time[0];
	s_year[1] = Time[1];
	s_year[2] = Time[2];
	s_year[3] = Time[3];
	s_day[0] = Time[4];
	s_day[1] = Time[5];
	s_day[2] = Time[6];
	Time[7] = 0;
	i_day = StringToInt(s_day);
	if (i_day > 99)
		return Time;
	else if (i_day <= 9)
	{
		if (s_day[0] != '0')
		{
			Time[4] = '0';
			Time[5] = '0';
			Time[6] = s_day[0];
			return Time;
		}
		else
			return Time;
	}
	else
	{
		if (s_day[0] != '0')
		{
			Time[4] = '0';
			Time[5] = s_day[0];
			Time[6] = s_day[1];
			return Time;
		}
		else
			return Time;
	}
}

/* 获取拥有的装备数量 */
public GetHasZBItemCount(Client)
{
	new count;
	for (new i; i < ITEM_ZB_MAX; i++)
	{
		if (GetZBItemTime(Client, i) > 0)
			count++;
	}

	return count;
}

//消耗物品栏扩充
public BuyXHItemBag(Client)
{
	if (IsValidPlayer(Client, false) && Cash[Client] >= XH_COSTEFFECT[Client])
	{
		Cash[Client] -= XH_COSTEFFECT[Client];
		PlayerXHItemSize[Client] += 1;
		PrintHintText(Client, "════════════════ \n消耗物品栏已成功扩充一格,当前总空间为 %d 格! \n════════════════", PlayerXHItemSize[Client]);
	}
}

//装备物品栏扩充
public BuyZBItemBag(Client)
{
	if (IsValidPlayer(Client, false) && Cash[Client] >= ZB_COSTEFFECT[Client])
	{
		Cash[Client] -= ZB_COSTEFFECT[Client];
		PlayerZBItemSize[Client] += 1;
		PrintHintText(Client, "════════════════ \n装备物品栏已成功扩充一格,当前总空间为 %d 格! \n════════════════", PlayerZBItemSize[Client]);
	}
}

//取玩家所有道具数
public GetPlayerAllItemCount(Client)
{
	new count;
	for (new o; o < 2; o++)
	{
		for(new p; p < MaxItemNum[o]; p++)
			count += PlayerItem[Client][o][p];
	}

	return count;
}

//取玩家消耗类物品总数
public GetHasXHItemCount(Client)
{
	new count;
	for(new p; p < MaxItemNum[ITEM_XH]; p++)
		count += PlayerItem[Client][ITEM_XH][p];

	return count;
}

//名字获取道具的ID
public GetItemID(String:name[], type)
{
	new id;
	for (new i; i < MaxItemNum[type]; i++)
	{
		if (type == ITEM_XH)
		{
			if (StrContains(name, ItemName_XH[i], false) >= 0)
			{
				id = i;
				break;
			}
		}
		else if (type == ITEM_ZB)
		{
			if (StrContains(name, ItemName_ZB[i], false) >= 0)
			{
				id = i;
				break;
			}
		}
	}

	return id;
}

/* 我的道具快捷指令 */
public Action:Command_MyItem(Client, args)
{
	if (!IsValidPlayer(Client, false))
		return Plugin_Handled;

	MenuFunc_MyItem(Client);

	return Plugin_Handled;
}

/* 设置装备快捷指令 */
public Action:Command_SetItem(Client, args)
{
	if (args < 3)
	{
		for (new i; i < ITEM_ZB_MAX; i++)
			ReplyToCommand(Client, "[道具] 装备类ID: %d 物品: %s", i, ItemName_ZB[i]);

		for (new i; i < ITEM_XH_MAX; i++)
			ReplyToCommand(Client, "[道具] 消耗类ID: %d 物品: %s", i, ItemName_XH[i]);

		ReplyToCommand(Client, "[道具] 命令:sm_ITEM86 [Name] [Type] [Item] [Num]");
		return Plugin_Handled;
	}

	decl String:s_name[64], String:s_type[16], String:s_item[16], String:s_day[16], String:Temp[64], target, i_type, i_item, i_day;

	GetCmdArg(1, s_name, sizeof(s_name));
	GetCmdArg(2, s_type, sizeof(s_type));
	GetCmdArg(3, s_item, sizeof(s_item));
	i_type = StringToInt(s_type);
	i_item = StringToInt(s_item);
	for (new i = 1; i <= MaxClients; i++)
	{
		if (IsValidPlayer(i, false))
		{
			GetClientName(i, Temp, sizeof(Temp));
			if (StrEqual(s_name, Temp))
			{
				target = i;
				break;
			}
		}
	}

	if (!IsValidPlayer(target, false))
	{
		ReplyToCommand(Client, "[道具] 无效的玩家!");
		return Plugin_Handled;
	}

	Format(Temp, sizeof(Temp), "你收到来自管理员送来的礼物:");
	if (args > 3)
	{
		GetCmdArg(4, s_day, sizeof(s_day));
		i_day = StringToInt(s_day);
		if (i_type == 0)
		{
			if (PlayerXHItemSize[target] - GetHasXHItemCount(target) <= 0 && target != Client)
			{
				ReplyToCommand(Client, "[道具] %N 的消耗类物品栏已满.", target);
				return Plugin_Handled;
			}

			if (PlayerXHItemSize[target] - GetHasXHItemCount(target) <= 0 && target != Client)
			{
				ReplyToCommand(Client, "[道具] %N 的消耗类物品栏已满.", target);
				return Plugin_Handled;
			}
			PlayerItem[target][ITEM_XH][i_item] = i_day;
			ReplyToCommand(Client, "[道具] %N 获得了 [%s](%d个)", target, ItemName_XH[i_item], i_day);
			if (target != Client)
				MenuFunc_GotItemMSG(target, ITEM_XH, i_item, i_day, Temp), CPrintToChatAll("\x03[道具] {red}%N \x03收到了来自管理员送的 {green}[%s(%d个)]", target, ItemName_XH[i_item], i_day);

		}
		else if (i_type == 1)
		{
			if (PlayerZBItemSize[target] - GetHasZBItemCount(target) <= 0 && target != Client)
			{
				ReplyToCommand(Client, "[道具] %N 的装备类物品栏已满.", target);
				return Plugin_Handled;
			}

			SetZBItemTime(target, i_item, i_day, false, false);
			ReplyToCommand(Client, "[道具] %N 获得了 [%s](%d天)", target, ItemName_ZB[i_item], i_day);
			if (target != Client)
				MenuFunc_GotItemMSG(target, ITEM_ZB, i_item, i_day, Temp), CPrintToChatAll("\x03[道具] {red}%N \x03收到了来自管理员送的 {green}[%s(%d天)]", target, ItemName_ZB[i_item], i_day);
		}
	}
	else
	{
		if (i_type == 0)
		{
			i_day = PlayerItem[target][ITEM_XH][i_item];
			ReplyToCommand(Client, "[道具] %N 拥有 [%s](%d个)", target, ItemName_XH[i_item], i_day);
		}
		else if (i_type == 1)
		{
			i_day = GetZBItemTime(target, i_item);
			ReplyToCommand(Client, "[道具] %N 拥有 [%s](%d天)", target, ItemName_ZB[i_item], i_day);
		}
	}


	return Plugin_Handled;
}



/* 道具系统全部数据重置 */
public ResetAllItemData()
{
	IsActionQTSXJ = false;
	IsActionQTHDJ = false;
	IsActionWXZDJ = false;
	for (new i = 1; i <= MaxClients; i++)
	{
		UseXHItem[i] = -1;
		UseZBItem[i] = -1;
	}
}

/* 获取随机有效幸存者 */
public Item_GetRandomSurvivor(type)
{
	new Handle:array;
	array = CreateArray(1, 0);

	for(new i = 1; i <= MaxClients; i++)
	{
		if(!IsValidPlayer(i, false, false) || GetClientTeam(i) != 2 || !IsPasswordConfirm[i])
			continue;
		if (type == 0)
		{
			if (PlayerXHItemSize[i] - GetHasXHItemCount(i) <= 0)
				continue;
		}
		else if (type == 1)
		{
			if (PlayerZBItemSize[i] - GetHasZBItemCount(i) <= 0)
				continue;
		}

		PushArrayCell(array, i);
	}

	if (GetArraySize(array) <= 0)
		return 0;

	new maxsize = GetArraySize(array) - 1;
	new clientNum = GetArrayCell(array, GetRandomInt(0, maxsize));
	return clientNum;
}

/* 刷新道具装备店物品 */
public RefreshItemBuyData()
{
	new Float:Radio_Item = GetRandomFloat(0.0, 100.0);
	new bool:isok = false;
	new i_type = GetRandomInt(0, 1);
	if (Radio_Item < ItemBuyRadio[i_type])
	{
		new Float:i_item = GetRandomFloat(0.0, 100.0);
		new chose;
		if (i_type == ITEM_XH)
		{
			chose = GetRandomInt(0, ITEM_XH_MAX - 1);
			if (i_item <= Item_XH_Radio[chose])
			{
				new Float:r_max = GetRandomFloat(0.0, 100.0)
				new needcash = GetRandomInt(5000, 15000);
				new num;
				if (r_max < 1.0)
					num = GetRandomInt(10, 20);
				else if (r_max < 10.0)
					num = GetRandomInt(5, 10);
				else if (r_max < 50.0)
					num = GetRandomInt(3, 8);
				else if (r_max < 80.0)
					num = GetRandomInt(4, 7);
				else if (r_max < 100.0)
					num = GetRandomInt(1, 4);

				ItemBuy_Type = ITEM_XH;
				ItemBuy_Item = chose;
				ItemBuy_Num = num;
				ItemBuy_Cash = needcash;
				isok = true;
			}
		}
		else if (i_type == ITEM_ZB)
		{
			chose = GetRandomInt(0, ITEM_ZB_MAX - 1);
			if (i_item <= Item_ZB_Radio[chose])
			{
				new Float:r_day = GetRandomFloat(0.0, 100.0)
				new num;
				new needcash;
				if (r_day < 1.0)
					num = GetRandomInt(15, 30), needcash = GetRandomInt(300000, 500000);
				else if (r_day < 3.0)
					num = GetRandomInt(10, 15), needcash = GetRandomInt(200000, 250000);
				else if (r_day < 5.0)
					num = GetRandomInt(7, 10), needcash = GetRandomInt(150000, 200000);
				else if (r_day < 10.0)
					num = GetRandomInt(5, 7), needcash = GetRandomInt(80000, 150000);
				else if (r_day < 30.0)
					num = GetRandomInt(3, 5), needcash = GetRandomInt(30000, 100000);
				else if (r_day < 100.0)
					num = GetRandomInt(1, 3), needcash = GetRandomInt(10000, 50000);

				ItemBuy_Type = ITEM_ZB;
				ItemBuy_Item = chose;
				ItemBuy_Num = num;
				ItemBuy_Cash = needcash;
				isok = true;
			}
		}
	}

	if (!isok)
	{
		ItemBuy_Type = -1;
		ItemBuy_Item = -1;
		ItemBuy_Num = 0;
		ItemBuy_Cash = 0;
	}
}

/* 物品掉落(type 0 = 消耗类 1 = 装备类 ) */
stock DropRandomItem(Float:Radio, type)
{
	new Float:Random_A = GetRandomFloat(0.0, 100.0);
	new Chose;
	new Player = Item_GetRandomSurvivor(type);
	if (IsValidPlayer(Player))
	{
		if (Random_A < Radio)
		{
			new Float:Random_B = GetRandomFloat(0.0, 100.0);
			if (type == 0)
			{
				Chose = GetRandomInt(0, ITEM_XH_MAX - 1);
				if (Random_B <= Item_XH_Radio[Chose])
				{
					PlayerItem[Player][ITEM_XH][Chose] += 1;
					CPrintToChatAll("\x03[道具] {red}%N \x03获得了 {red}[%s(1个)]", Player, ItemName_XH[Chose]);
					MenuFunc_GotItemMSG(Player, type, Chose, 1, "你获得了一件道具:");
					EmitSoundToClient(Player, SOUND_GOTITEM);
				}
			}
			else if (type == 1)
			{
				Chose = GetRandomInt(0, ITEM_ZB_MAX - 1);
				if (Random_B <= Item_ZB_Radio[Chose])
				{
					new Float:r_day = GetRandomFloat(0.0, 100.0)
					new day;
					if (r_day < 1.0)
						day = GetRandomInt(15, 30);
					else if (r_day < 3.0)
						day = GetRandomInt(10, 15);
					else if (r_day < 5.0)
						day = GetRandomInt(7, 10);
					else if (r_day < 10.0)
						day = GetRandomInt(5, 7);
					else if (r_day < 30.0)
						day = GetRandomInt(3, 5);
					else if (r_day < 100.0)
						day = GetRandomInt(1, 3);

					if (day > 0)
					{
						SetZBItemTime(Player, Chose, day);
						EmitSoundToClient(Player, SOUND_GOTITEM);
						MenuFunc_GotItemMSG(Player, type, Chose, day, "你获得了一件道具:");
					}
				}
			}
		}
	}
}

/* 赠送道具 */
public PlayerGiveItem(Client, target, type, item)
{
	if (IsValidPlayer(Client, false) && IsValidPlayer(target, false))
	{
		decl String:msg[64];
		Format(msg, sizeof(msg), "收到来自%N送来的物品:", Client);
		if (type == ITEM_XH)
		{
			if (PlayerItem[Client][ITEM_XH][item] > 0)
			{
				PlayerItem[Client][ITEM_XH][item] -= 1;
				PlayerItem[target][ITEM_XH][item] += 1;
				CPrintToChatAll("\x03[道具] {red}%N \x03将 {green}[%s](1个) {lightgreen}赠送给了 {green}%N ", Client, ItemName_XH[item], target);
				MenuFunc_GotItemMSG(target, ITEM_XH, item, 1, msg);
				return 1;
			}
		}
		else if (type == ITEM_ZB)
		{
			if (GetZBItemTime(Client, item) > 0)
			{
				new day = GetZBItemTime(Client, item);
				SetZBItemTime(Client, item, 0, false);
				SetZBItemTime(target, item, day, false);
				PlayerItem[Client][ITEM_ZB][item] = 0;
				CPrintToChatAll("\x03[装备] {red}%N \x03将 {green}[%s](%d天) {lightgreen}赠送给了 {green}%N ", Client, ItemName_ZB[item], day, target);
				MenuFunc_GotItemMSG(target, ITEM_ZB, item, day, msg);
				return 1;
			}
		}
	}

	return 0;
}

//设置神器套装光晕轮廓
public SetPlayerZBColor(Client,zb)					//神器
{
	//new String:color[32];
	switch (zb)
	{
		case 1:	//神器
		{

			//GetConVarString(sm_playerequipment_color_SQ, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 0, 154, 233, 172);
		}
		case 2:	//传说
		{
			//GetConVarString(sm_playerequipment_color_CQ, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 0, 80, 234, 64);

		}
		case 3:	//光环
		{
			//GetConVarString(sm_playerequipment_color_GH, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 0, 220, 234,64);
		}
		case 4:	//套装
		{
			//GetConVarString(sm_playerequipment_color_TZ, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 0, 255, 64, 130);
		}
		case 5:	//终极套装
		{
			//GetConVarString(sm_playerequipment_color_XQ, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 0, 255, 0, 0);
		}
		case 6:	//地狱神器
		{
			//GetConVarString(sm_playerequipment_color_DY, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 0, 255, 130, 40);
		}
		case 7:	//天堂神器
		{
			//GetConVarString(sm_playerequipment_color_TT, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 255, 0, 0, 150);
		}
		case 8:	//
		{
			//GetConVarString(sm_playerequipment_color_SW, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 0, 255, 70, 130);
		}
		case 9:	//
		{
			//GetConVarString(sm_playerequipment_color_LD, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 0, 70, 130, 255);
		}
		case 10:	//
		{
			//GetConVarString(sm_playerequipment_color_AQ, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 0, 70, 234, 255);
		}
		case 11:	//
		{
			//GetConVarString(sm_playerequipment_color_AQ, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 0, 255, 234, 64);
		}
		case 12:	//
		{
			//GetConVarString(sm_playerequipment_color_AQ, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 0, 172, 234, 85);
		}
		case 13:	//
		{
			//GetConVarString(sm_playerequipment_color_AQ, color, sizeof(color));
			//SetEntityRenderMode(Client, RenderMode:0);	//设置一个实体的渲染模式
			//DispatchKeyValue(Client, "rendercolor", color);
			PerformGlow(Client, 3, 0, 172, 70, 130);
		}

	}
}

/*******************************************************************************************
*								道具系统_其他功能_结束
*******************************************************************************************/
